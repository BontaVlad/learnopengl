"9a5ed0681405bd96c49518fb967571610c2449ab"
#s(undo-tree [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil (#1=[nil nil ((#("//" 0 1 (fontified t c-is-sws t c-in-sws t face font-lock-comment-delimiter-face) 1 2 (fontified t c-in-sws t face font-lock-comment-delimiter-face)) . -141) 139 (t 23221 13306 580150 426000)) nil (23221 13323 435867 937000) 0 nil]) ((#("// " 0 1 (fontified t c-is-sws t c-in-sws t face font-lock-comment-delimiter-face) 1 2 (fontified t c-in-sws t face font-lock-comment-delimiter-face) 2 3 (fontified t c-in-sws t face font-lock-comment-delimiter-face)) . -506) 514 (t 23221 13168 596603 855000)) nil (23221 13306 549021 477000) 0 nil]) ((1040 . 1041)) nil (23221 13168 561142 34000) 0 nil]) ((1037 . 1038)) nil (23221 13168 561145 661000) 0 nil]) ((1034 . 1036) (#("0" 0 1 (fontified t face highlight-numbers-number)) . -1034) (undo-tree-id0 . -1) (#("." 0 1 (fontified t)) . -1035) (undo-tree-id1 . -1) (#("0" 0 1 (fontified t face highlight-numbers-number)) . -1036) (undo-tree-id2 . -1) 1037 (1032 . 1037) (1031 . 1032) (1027 . 1031) (1025 . 1027) (1024 . 1026) (#("(" 0 1 (fontified nil face glsl-type-face)) . -1024) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (1024 . 1025) (1008 . 1024) (1005 . 1008) 1004) nil (23221 13168 561167 585000) 0 nil]) ((1004 . 1005) (989 . 1004) (#("f" 0 1 (fontified t)) . -989) (undo-tree-id5 . -1) (988 . 990) (#("f" 0 1 (fontified t)) . -988) (undo-tree-id6 . -1) (983 . 989) (972 . 983) (#("r" 0 1 (fontified t)) . -972) (undo-tree-id7 . -1) (#("t" 0 1 (fontified t)) . -973) (undo-tree-id8 . -1) (#(" " 0 1 (fontified t)) . -974) (undo-tree-id9 . -1) (#("=" 0 1 (fontified t)) . -975) (undo-tree-id10 . -1) (#(" " 0 1 (fontified t)) . -976) (undo-tree-id11 . -1) 977 (969 . 977) (#("l" 0 1 (fontified t)) . -969) (undo-tree-id12 . -1) (#("u" 0 1 (fontified t)) . -970) (undo-tree-id13 . -1) (#("t" 0 1 (fontified t)) . -971) (undo-tree-id14 . -1) 972 (962 . 972) (959 . 962) (#("  " 0 2 (fontified t)) . 959) (undo-tree-id15 . -2) 961 (958 . 961) 957) nil (23221 13168 561192 612000) 0 nil]) ((957 . 958) (956 . 957) (#("d" 0 1 (fontified t)) . -956) (undo-tree-id16 . -1) 957 (953 . 957)) nil (23221 13168 561202 173000) 0 nil]) ((942 . 952) (941 . 942) (924 . 941) (923 . 925) (#("(" 0 1 (fontified nil face glsl-builtin-face)) . -923) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (923 . 924) (915 . 923) (914 . 915) (908 . 914) (907 . 908) (897 . 907) (876 . 897) (873 . 876) 872) nil (23221 13168 561230 456000) 0 nil]) ((872 . 873)) nil (23221 13168 561234 994000) 0 nil]) ((868 . 871) (867 . 868) (#("s" 0 1 (fontified t)) . -867) (undo-tree-id19 . -1) (#("e" 0 1 (fontified t)) . -868) (undo-tree-id20 . -1) 869 (852 . 869) (851 . 852)) nil (23221 13168 561243 281000) 0 nil]) ((846 . 850) (845 . 846)) nil (23221 13168 561246 863000) 0 nil]) ((836 . 844) (#("f" 0 1 (fontified t)) . -836) (undo-tree-id21 . -1) (834 . 837) (833 . 834) (832 . 833) (825 . 832) (824 . 826) (#("(" 0 1 (fontified nil face glsl-builtin-face)) . -824) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (824 . 825) (821 . 824) (820 . 822) (#("(" 0 1 (fontified nil face glsl-builtin-face)) . -820) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (820 . 821) (819 . 820) (#("p" 0 1 (fontified t)) . -819) (undo-tree-id26 . -1) 820 (817 . 820) (816 . 818) (#("(" 0 1 (fontified nil face glsl-builtin-face)) . -816) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (816 . 817) (800 . 816) (#("f" 0 1 (fontified t)) . -800) (undo-tree-id29 . -1) (797 . 801) 752) nil (23221 13168 561267 820000) 0 nil]) ((695 . 696)) nil (23221 13168 561273 426000) 0 nil]) ((795 . 796)) nil (23221 13168 561275 240000) 0 nil]) ((789 . 794) (788 . 789) (784 . 788) (#("h" 0 1 (fontified t)) . -784) (undo-tree-id30 . -1) (#("t" 0 1 (fontified t)) . -785) (undo-tree-id31 . -1) 786 (779 . 786) (778 . 780) (#("(" 0 1 (fontified nil face glsl-builtin-face)) . -778) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (778 . 779) (773 . 778) (#("f" 0 1 (fontified t)) . -773) (undo-tree-id34 . -1) (760 . 774) (#("f" 0 1 (fontified t)) . -760) (undo-tree-id35 . -1) (758 . 761) (755 . 758) (#("r" 0 1 (fontified t)) . -755) (undo-tree-id36 . -1) 756 (753 . 756) (750 . 753) 749) nil (23221 13168 561291 944000) 0 nil]) ((749 . 750)) nil (23221 13168 561297 218000) 0 nil]) ((#(";" 0 1 (fontified t)) . -748) (undo-tree-id37 . -1) 749 (748 . 749)) nil (23221 13168 561301 17000) 0 nil]) ((738 . 748) (731 . 738) (#("w" 0 1 (fontified t)) . -731) (undo-tree-id38 . -1) (#("i" 0 1 (fontified t)) . -732) (undo-tree-id39 . -1) (#("e" 0 1 (fontified t)) . -733) (undo-tree-id40 . -1) 734 (731 . 734) (730 . 732) (#("(" 0 1 (fontified nil face glsl-builtin-face)) . -730) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (730 . 731) (727 . 730) (706 . 727) (703 . 706) (696 . 703) (695 . 696) (693 . 695) (690 . 693) (#("  " 0 2 (fontified t)) . 690) (undo-tree-id43 . -2) 692 (689 . 692) 688) nil (23221 13168 561318 963000) 0 nil]) ((688 . 689) (684 . 688)) nil (23221 13168 561324 435000) 0 nil]) ((675 . 683) (#("." 0 1 (fontified t)) . -675) (undo-tree-id44 . -1) (#("e" 0 1 (fontified t)) . -676) (undo-tree-id45 . -1) (#("x" 0 1 (fontified t)) . -677) (undo-tree-id46 . -1) 678 (674 . 678) (#("t" 0 1 (fontified t)) . -674) (undo-tree-id47 . -1) 675 (673 . 675) (672 . 673) (668 . 672) (#("f" 0 1 (fontified t)) . -668) (undo-tree-id48 . -1) (667 . 669) (#("f" 0 1 (fontified t)) . -667) (undo-tree-id49 . -1) (656 . 668) (655 . 657) (#("(" 0 1 (fontified nil face glsl-builtin-face)) . -655) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (655 . 656) (647 . 655) (646 . 647) (644 . 646) (#("f" 0 1 (fontified t)) . -644) (undo-tree-id52 . -1) (643 . 645) (#("f" 0 1 (fontified t)) . -643) (undo-tree-id53 . -1) (640 . 644) (639 . 640) (634 . 639) (#("f" 0 1 (fontified t)) . -634) (undo-tree-id54 . -1) (633 . 635) (#("f" 0 1 (fontified t)) . -633) (undo-tree-id55 . -1) (629 . 634) (618 . 629) (#("f" 0 1 (fontified t)) . -618) (undo-tree-id56 . -1) (617 . 619) (#("f" 0 1 (fontified t)) . -617) (undo-tree-id57 . -1) (610 . 618) (607 . 610) 562) nil (23221 13168 561355 489000) 0 nil]) ((#("  ver
" 0 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t)) . 608) (undo-tree-id58 . -6) (undo-tree-id59 . 1) (undo-tree-id60 . -4) (undo-tree-id61 . -6) (undo-tree-id62 . -6) (undo-tree-id63 . -6) (undo-tree-id64 . -6) (undo-tree-id65 . -2) (undo-tree-id66 . -6) 612) nil (23221 13168 561380 16000) 0 nil]) ((565 . 569) (#("o" 0 1 (fontified t)) . -565) (undo-tree-id67 . -1) (#("l" 0 1 (fontified t)) . -566) (undo-tree-id68 . -1) (#("a" 0 1 (fontified t)) . -567) (undo-tree-id69 . -1) (#("t" 0 1 (fontified t)) . -568) (undo-tree-id70 . -1) 569 (564 . 569) (#("f" 0 1 (fontified t c-is-sws t)) . -564) (undo-tree-id71 . -1) (564 . 565) (#("vec3" 0 1 (fontified t c-is-sws t face glsl-type-face) 1 2 (fontified t face glsl-type-face) 2 3 (fontified t face glsl-type-face) 3 4 (fontified t face glsl-type-face)) . 564)) nil (23221 13168 561391 741000) 0 nil]) ((609 . 612) (606 . 609) 562) nil (23221 13168 561396 694000) 0 nil]) ((605 . 606)) nil (23221 13168 561398 649000) 0 nil]) ((600 . 604) (599 . 600)) nil (23221 13168 561400 873000) 0 nil]) ((589 . 598) (588 . 589) (584 . 588) (583 . 585) (#("(" 0 1 (fontified nil face glsl-builtin-face)) . -583) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (583 . 584) (580 . 583) (579 . 581) (#("(" 0 1 (fontified nil face glsl-builtin-face)) . -579) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (579 . 580) (576 . 579) (572 . 576) (#("f" 0 1 (fontified t)) . -572) (undo-tree-id76 . -1) (571 . 573) (#("f" 0 1 (fontified t)) . -571) (undo-tree-id77 . -1) (568 . 572) (#("d" 0 1 (fontified t)) . -568) (undo-tree-id78 . -1) (#(" " 0 1 (fontified t)) . -569) (undo-tree-id79 . -1) 570 (569 . 570) (#("i" 0 1 (fontified t)) . -569) (undo-tree-id80 . -1) (#("f" 0 1 (fontified t)) . -570) (undo-tree-id81 . -1) (#("f" 0 1 (fontified t)) . -571) (undo-tree-id82 . -1) 572 (571 . 572) (#("f" 0 1 (fontified t)) . -571) (undo-tree-id83 . -1) (570 . 572) (#("f" 0 1 (fontified t)) . -570) (undo-tree-id84 . -1) (564 . 571) (561 . 564) 560) nil (23221 13168 561429 188000) 0 nil]) ((560 . 561)) nil (23221 13168 561436 628000) 0 nil]) ((552 . 559) (#("G" 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -552) (undo-tree-id85 . -1) (#("r" 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -553) (undo-tree-id86 . -1) (#("a" 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -554) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (#("p" 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -555) (undo-tree-id89 . -1) 556 (550 . 556) (535 . 550) (534 . 536) (#("(" 0 1 (fontified nil face font-lock-comment-face c-in-sws t)) . -534) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (534 . 535) (529 . 534) (508 . 529) (506 . 508) (503 . 506) 471) nil (23221 13168 561451 162000) 0 nil]) ((502 . 503)) nil (23221 13168 561455 656000) 0 nil]) ((#("(" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face))) . -501) (undo-tree-id92 . -1) (undo-tree-id93 . 1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . 1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-3-face))) . 502) (undo-tree-id110 . 1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . 1) (undo-tree-id114 . -1) (501 . 503) (#("(" 0 1 (fontified nil)) . -501) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (501 . 502) (495 . 501) (494 . 496) (#("(" 0 1 (fontified nil face glsl-builtin-face)) . -494) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (494 . 495) (478 . 494) (473 . 478) (470 . 473) (466 . 470) (#("f" 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -466) (undo-tree-id119 . -1) (465 . 467) (#("f" 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -465) (undo-tree-id120 . -1) (462 . 466) (460 . 462) (457 . 460) (#("  " 0 2 (fontified t)) . 457) (undo-tree-id121 . -2) 459 (456 . 459) 455) nil (23221 13168 561506 613000) 0 nil]) ((455 . 456) (451 . 455)) nil (23221 13168 561514 227000) 0 nil]) ((444 . 450) (#("c" 0 1 (fontified t)) . -444) (undo-tree-id122 . -1) 445 (440 . 445) (439 . 440) (435 . 439) (#("f" 0 1 (fontified t)) . -435) (undo-tree-id123 . -1) (434 . 436) (#("f" 0 1 (fontified t)) . -434) (undo-tree-id124 . -1) (423 . 435) (422 . 424) (#("(" 0 1 (fontified nil face glsl-builtin-face)) . -422) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (422 . 423) (414 . 422) (413 . 414) (405 . 413) (384 . 405) (381 . 384) (373 . 381) (#("a" 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -373) (undo-tree-id127 . -1) (#("m" 0 1 (fontified t c-in-sws t face font-lock-comment-face)) . -374) (undo-tree-id128 . -1) 375 (373 . 375) (371 . 373) (368 . 371) (#("  " 0 2 (fontified t)) . 368) (undo-tree-id129 . -2) 370 (367 . 370) 366) nil (23221 13168 561535 963000) 0 nil]) ((365 . 366)) nil (23221 13168 561541 704000) 0 nil]) ((#("
" 0 1 (fontified t)) . 354) (undo-tree-id130 . -1) (undo-tree-id131 . 1)) nil (23221 13168 561545 613000) 0 nil]) ((354 . 355)) nil (23221 13168 561548 109000) 0 nil]) (365) nil (23221 13168 561550 153000) 0 nil]) ((#("  " 0 2 (fontified nil)) . 366) (undo-tree-id132 . 2) (#("
" 0 1 (fontified t)) . -366) (undo-tree-id133 . -1) (undo-tree-id134 . 1) 354) nil (23221 13168 561555 726000) 0 nil]) ((#("
" 0 1 (fontified t)) . -354) (undo-tree-id135 . -1) (undo-tree-id136 . 1) (undo-tree-id137 . 1) (undo-tree-id138 . 1) (undo-tree-id139 . 1) (undo-tree-id140 . 1) (undo-tree-id141 . 1) (undo-tree-id142 . 1)) nil (23221 13168 561568 163000) 0 nil]) ((354 . 355) 365) nil (23221 13168 561571 516000) 0 nil]) ((367 . 369) (366 . 368) (365 . 367) (#("{" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face))) . -365) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (365 . 366) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face))) . 365) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (364 . 365) (363 . 365) (#("(" 0 1 (fontified nil)) . -363) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (363 . 364) (354 . 363) (352 . 354) (351 . 352) (335 . 351) (#("f" 0 1 (fontified t)) . -335) (undo-tree-id149 . -1) (333 . 336) (332 . 333) (331 . 332) 330) nil (23221 13168 561596 414000) 0 nil]) ((330 . 331) (326 . 330) (308 . 326) (#("f" 0 1 (fontified t)) . -308) (undo-tree-id150 . -1) (305 . 309) (304 . 305) (303 . 304) (295 . 303) (286 . 295) (#("f" 0 1 (fontified t)) . -286) (undo-tree-id151 . -1) (283 . 287) (282 . 283) (281 . 282) 280) nil (23221 13168 561608 357000) 0 nil]) ((280 . 281) (276 . 280) (#("o" 0 1 (fontified t)) . -276) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (#("d" 0 1 (fontified t)) . -277) (undo-tree-id154 . -1) (undo-tree-id155 . -1) 278 (263 . 278) (262 . 263) (261 . 262) (247 . 261) (246 . 247) (245 . 246) (230 . 245) (#("
" 0 1 (fontified t)) . -230) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . 1) (#("i" 0 1 (fontified t)) . -231) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (#("n" 0 1 (fontified t face glsl-keyword-face)) . -232) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (#(" " 0 1 (fontified t)) . -233) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (#("v" 0 1 (fontified t)) . -234) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (#("e" 0 1 (fontified t)) . -235) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (#("r" 0 1 (fontified t)) . -236) (undo-tree-id170 . -1) (undo-tree-id171 . -1) 237 (231 . 237) (229 . 231) (228 . 229) 227) nil (23221 13168 561642 686000) 0 nil]) ((227 . 228)) nil (23221 13168 561649 429000) 0 nil]) ((224 . 225) (213 . 224) (#("r" 0 1 (fontified t)) . -213) (undo-tree-id172 . -1) (#("3" 0 1 (fontified t)) . -214) (undo-tree-id173 . -1) 215 (211 . 215) (208 . 211) (207 . 208) (203 . 207) (#("f" 0 1 (fontified t)) . -203) (undo-tree-id174 . -1) (202 . 204) (#("f" 0 1 (fontified t)) . -202) (undo-tree-id175 . -1) (199 . 203) (195 . 199) (192 . 195) (191 . 192) (181 . 191) (#("r" 0 1 (fontified t)) . -181) (undo-tree-id176 . -1) (#("3" 0 1 (fontified t)) . -182) (undo-tree-id177 . -1) 183 (179 . 183) (176 . 179) (#("  " 0 2 (fontified t)) . 176) (undo-tree-id178 . -2) 178 (175 . 178) (174 . 175) (161 . 174) (160 . 161) (157 . 160) 156) nil (23221 13168 561670 269000) 0 nil]) ((156 . 157) (143 . 156) (141 . 143) (139 . 141) (138 . 140) (137 . 139) (#("{" 0 1 (fontified nil)) . -137) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (137 . 138) (134 . 137) (#("t" 0 1 (fontified t)) . -134) (undo-tree-id181 . -1) (undo-tree-id182 . -1) 135 (125 . 135) (124 . 125) (#("
" 0 1 (fontified t)) . -124) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . 1) (#("s" 0 1 (fontified t)) . -125) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (#("t" 0 1 (fontified t)) . -126) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (#("r" 0 1 (fontified t)) . -127) (undo-tree-id191 . -1) (undo-tree-id192 . -1) 128 (125 . 128) (123 . 125) (122 . 123) 121) nil (23221 13168 561700 372000) 0 nil]) ((121 . 122)) nil (23221 13168 561706 174000) 0 nil]) ((118 . 119) (107 . 118) (#("h" 0 1 (fontified t)) . -107) (undo-tree-id193 . -1) 108 (103 . 108) (#("f" 0 1 (fontified t)) . -103) (undo-tree-id194 . -1) (100 . 104) (99 . 100) (98 . 99) (#("l" 0 1 (fontified t)) . -98) (undo-tree-id195 . -1) 99 (81 . 99) (78 . 81) (77 . 78) (73 . 77) (#("f" 0 1 (fontified t)) . -73) (undo-tree-id196 . -1) (72 . 74) (#("f" 0 1 (fontified t)) . -72) (undo-tree-id197 . -1) (69 . 73) (60 . 69) (57 . 60) 40) nil (23221 13168 561721 797000) 0 nil]) ((57 . 58) (#(")" 0 1 (fontified t face (rainbow-delimiters-mismatched-face))) . -57) (undo-tree-id198 . -1) (undo-tree-id199 . -1) 58 (57 . 58) (#(" " 0 1 (fontified nil)) . -57) (57 . 58) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face))) . -57) (57 . 58) (56 . 58) (#("{" 0 1 (fontified nil)) . -56) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (56 . 57) (40 . 56) (39 . 40) (38 . 39) (37 . 38) (26 . 37) (#("3" 0 1 (fontified t face glsl-type-face)) . -26) (undo-tree-id202 . -1) (undo-tree-id203 . -1) 27 (19 . 27) (18 . 19) (2 . 18) (#(" " 0 1 (fontified t)) . -2) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (#("v" 0 1 (fontified t)) . -3) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (#("e" 0 1 (fontified t)) . -4) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (#("r" 0 1 (fontified t)) . -5) (undo-tree-id210 . -1) (undo-tree-id211 . -1) 6 (2 . 6) (1 . 2) (t 23221 12784 506133 770000)) nil (23221 13168 561751 26000) 0 nil]) nil nil (23221 13168 561758 452000) 0 nil] #1# 5696 48 nil)