"058469842dd2d4aa8df95bd57cee47f2217ecc07"
#s(undo-tree [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil (#4=[nil nil ((9872 . 9875) (#("let" 0 3 (fontified t face font-lock-keyword-face)) . 9872)) nil (23221 17890 654850 937000) 0 nil]) ((#("      " 0 6 (fontified nil)) . -9916) (undo-tree-id2054 . -6) (undo-tree-id2055 . -6) (undo-tree-id2056 . -6) (undo-tree-id2057 . -6) (undo-tree-id2058 . -6) (9908 . 9916) 9914) nil (23221 17890 654892 933000) 0 nil]) ((#("let " 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t)) . 9914) (undo-tree-id2059 . -3) (undo-tree-id2060 . -3) (undo-tree-id2061 . -3) (undo-tree-id2062 . -3) 9917) nil (23221 17890 654906 90000) 0 nil]) ((9875 . 9884) (#(" " 0 1 (fontified t)) . 9875) (undo-tree-id2063 . -1) 9876) nil (23221 17890 654913 601000) 0 nil]) ((9937 . 9938) (#("f" 0 1 (fontified t face highlight-numbers-number)) . -9937) (undo-tree-id2064 . -1) (9937 . 9938) (#("9" 0 1 (fontified t face highlight-numbers-number)) . -9937) (undo-tree-id2065 . -1) 9938 (9936 . 9938) (#("9" 0 1 (fontified t face highlight-numbers-number)) . -9936) (undo-tree-id2066 . -1) 9937 (9934 . 9937) (9933 . 9935) (#("(" 0 1 (fontified nil)) . -9933) (9932 . 9934) (#("f" 0 1 (fontified t)) . -9932) (undo-tree-id2067 . -1) (9928 . 9933) (#("model" 0 5 (fontified t)) . 9928)) nil (23221 17890 654934 267000) 0 nil]) ((#("    var model = mat4f(1.0f)
" 0 4 (fontified t) 4 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t) 8 14 (fontified t face font-lock-variable-name-face) 14 21 (fontified t) 21 22 (fontified t face (rainbow-delimiters-depth-1-face)) 22 23 (fontified t face highlight-numbers-number) 23 24 (fontified t) 24 26 (fontified t face highlight-numbers-number) 26 27 (fontified t face (rainbow-delimiters-depth-1-face)) 27 28 (fontified t)) . 9833) (undo-tree-id2068 . -26) (undo-tree-id2069 . -28) (undo-tree-id2070 . 7) (undo-tree-id2071 . -22) (undo-tree-id2072 . 2) (undo-tree-id2073 . -27) 9859) nil (23221 17890 654952 427000) 0 nil]) ((9937 . 9938) (#("       " 0 1 (fontified nil) 1 7 (fontified nil)) . 9937) (undo-tree-id2074 . 6) (undo-tree-id2075 . -1) (#("
" 0 1 (fontified t)) . -9938) (undo-tree-id2076 . 1) (undo-tree-id2077 . -1) 9937) nil (23221 17890 654965 91000) 0 nil]) ((9934 . 9938) (9927 . 9934) (t 23221 17836 838650 244000) 9903) nil (23221 17890 654971 299000) 0 nil]) ((#(".radians" 0 8 (fontified t)) . 9997) (t 23221 17792 555755 295000)) nil (23221 17836 800287 703000) 0 nil]) ((#("      angle = angle * i.float
" 0 24 (fontified t) 24 29 (fontified t face font-lock-type-face) 29 30 (fontified t)) . 9964) (undo-tree-id2032 . -11) (undo-tree-id2033 . -16) (undo-tree-id2034 . -29) (undo-tree-id2035 . -30) (undo-tree-id2036 . -30) (undo-tree-id2037 . -7) (undo-tree-id2038 . -30) (undo-tree-id2039 . -6) (undo-tree-id2040 . -11) 9971) nil (23221 17792 511872 86000) 0 nil]) ((9840 . 9841) (#("      " 0 6 (fontified nil)) . 9840) (#("
" 0 1 (fontified t)) . -9840) (undo-tree-id2041 . -1) 9837) nil (23221 17792 511882 617000) 0 nil]) ((#("      angle = 20.0f
" 0 14 (fontified t) 14 16 (fontified t face highlight-numbers-number) 16 17 (fontified t) 17 19 (fontified t face highlight-numbers-number) 19 20 (fontified t)) . 9867) (undo-tree-id2042 . -18) (undo-tree-id2043 . -20) (undo-tree-id2044 . -6) (undo-tree-id2045 . -11) 9885) nil (23221 17792 511895 239000) 0 nil]) ((9948 . 9953) (#("f" 0 1 (fontified t)) . -9948) (undo-tree-id2046 . -1) (9942 . 9949) (#("f" 0 1 (fontified nil face highlight-numbers-number)) . -9942) (9938 . 9943) (9926 . 9938) (9919 . 9926) 9901) nil (23221 17792 511905 485000) 0 nil]) ((#("      echo angle
" 0 6 (fontified t) 6 10 (fontified t face font-lock-builtin-face) 10 16 (fontified t) 16 17 (fontified t)) . 9956) (undo-tree-id2047 . 1) (undo-tree-id2048 . -17) (undo-tree-id2049 . -17) (undo-tree-id2050 . -17) (undo-tree-id2051 . -17) (undo-tree-id2052 . -6) (undo-tree-id2053 . -17) 9962 (t 23221 17755 105229 279000)) nil (23221 17792 511923 822000) 0 nil]) ((#("      echo angle
" 0 6 (fontified t) 6 10 (fontified t face font-lock-builtin-face) 10 16 (fontified t) 16 17 (fontified t)) . 10003) (undo-tree-id2010 . 17) (undo-tree-id2011 . 2) (undo-tree-id2012 . 2) (undo-tree-id2013 . -15) (undo-tree-id2014 . -15) (undo-tree-id2015 . -6) (undo-tree-id2016 . -15) (undo-tree-id2017 . -17) 10009) nil (23221 17755 67481 185000) 0 nil]) ((#("      echo i
" 0 6 (fontified t) 6 10 (fontified t face font-lock-builtin-face) 10 12 (fontified t) 12 13 (fontified t)) . 9973) (undo-tree-id2018 . -11) (undo-tree-id2019 . -11) (undo-tree-id2020 . 2) (undo-tree-id2021 . 2) (undo-tree-id2022 . 2) (undo-tree-id2023 . 2) (undo-tree-id2024 . 2) (undo-tree-id2025 . 2) (undo-tree-id2026 . -11) (undo-tree-id2027 . -11) (undo-tree-id2028 . -11) (undo-tree-id2029 . -11) (undo-tree-id2030 . -11) (undo-tree-id2031 . -13) 9984) nil (23221 17755 67516 78000) 0 nil]) ((9962 . 9972) (9955 . 9962) (t 23221 17739 227702 785000) 9931) nil (23221 17755 67523 178000) 0 nil]) ((9962 . 9968) (9955 . 9962) (t 23221 17725 780951 34000) 9935) nil (23221 17738 981231 268000) 0 nil]) ((9996 . 10002) (9992 . 9996) (9985 . 9992) 9962) nil (23221 17725 742299 246000) 0 nil]) ((#("      
" 0 6 (fontified t) 6 7 (fontified t)) . 9986) (undo-tree-id2004 . -5) (undo-tree-id2005 . -7) (undo-tree-id2006 . -7) 9991) nil (23221 17725 742317 265000) 0 nil]) ((9883 . 9885) (#("e" 0 1 (fontified t face highlight-numbers-number)) . -9883) (undo-tree-id2007 . -1) (#("0" 0 1 (fontified t face highlight-numbers-number)) . -9884) (undo-tree-id2008 . -1) 9885 (9883 . 9885)) nil (23221 17725 742330 208000) 0 nil]) ((9984 . 9990)) nil (23221 17725 742334 869000) 0 nil]) ((#("      " 0 6 (fontified t)) . -9984) (undo-tree-id2009 . -6) 9990 (9983 . 9990) (t 23221 14264 100824 13000) 9968) nil (23221 17725 742341 886000) 0 nil]) ((8538 . 8539) (#("(" 0 1 (fontified nil face (rainbow-delimiters-depth-2-face))) . -8538) (undo-tree-id1967 . -1) (undo-tree-id1968 . -1) (undo-tree-id1969 . -1) (undo-tree-id1970 . 1) (undo-tree-id1971 . -1) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) (undo-tree-id1974 . -1) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (undo-tree-id1979 . -1) (undo-tree-id1980 . -1) (undo-tree-id1981 . 1) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (undo-tree-id1986 . -1) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . 8539) (undo-tree-id1987 . -1) (undo-tree-id1988 . 1) (undo-tree-id1989 . -1) (undo-tree-id1990 . 1) (undo-tree-id1991 . -1) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . -8539) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) 8540 (#(")" 0 1 (fontified nil)) . 8540) (undo-tree-id1994 . -1) (8539 . 8540) (8538 . 8540) (#("(" 0 1 (fontified nil)) . -8538) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (8538 . 8539) (8537 . 8539) (#("(" 0 1 (fontified nil)) . -8537) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) (8533 . 8538) (8519 . 8533) (#("lighting" 0 8 (fontified t)) . -8519) (undo-tree-id1999 . -8) (undo-tree-id2000 . -7) 8527 (8519 . 8527) (#(" " 0 1 (fontified t)) . -8519) (undo-tree-id2001 . -1) (#(" " 0 1 (fontified t)) . -8520) (undo-tree-id2002 . -1) (#("l" 0 1 (fontified t)) . -8521) (undo-tree-id2003 . -1) 8522 (8521 . 8522) (8516 . 8521) (t 23221 14243 455214 28000) 8516) nil (23221 14264 55328 673000) 0 nil] [nil nil ((#("    " 0 4 (fontified t)) . -8892) (undo-tree-id1962 . -4) 8896 (8891 . 8896) (t 23221 14243 455214 28000) 8890) ((#("
    " 0 1 (fontified t) 1 5 (fontified nil)) . 8891) (undo-tree-id1963 . -5) (undo-tree-id1964 . -1) (undo-tree-id1965 . -1) (undo-tree-id1966 . -5) (8892 . 8896)) (23221 14254 515277 967000) 0 nil] [nil ([nil ([nil ([nil nil ((8627 . 8631)) ((#(".int" 0 1 (fontified t) 1 4 (fontified t face font-lock-type-face)) . 8627) (undo-tree-id1939 . -3) (undo-tree-id1940 . 1) (undo-tree-id1941 . 1) (undo-tree-id1942 . -3) (undo-tree-id1943 . -3) (t 23221 14161 444942 245000)) (23221 14161 394152 584000) 0 nil]) ((8568 . 8572) (t 23221 14153 256935 623000)) ((#(".int" 0 1 (fontified t) 1 4 (fontified t face font-lock-type-face)) . 8568)) (23221 14238 373493 437000) 0 nil]) ((8614 . 8623) (#("u" 0 1 (fontified nil)) . -8614) (undo-tree-id1931 . -1) (#("c" 0 1 (fontified nil)) . -8615) (undo-tree-id1932 . -1) (#("u" 0 1 (fontified t)) . -8616) (undo-tree-id1933 . -1) 8617 (8612 . 8617) (#("1" 0 1 (fontified t face highlight-numbers-number)) . -8612) (undo-tree-id1934 . -1) 8613) ((8612 . 8613) (#("spucu" 0 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil)) . 8612) (undo-tree-id1944 . -2) (undo-tree-id1945 . -2) (undo-tree-id1946 . -2) (undo-tree-id1947 . -2) (undo-tree-id1948 . -3) (undo-tree-id1949 . -3) (undo-tree-id1950 . -4) (undo-tree-id1951 . -4) (undo-tree-id1952 . -5) (8614 . 8617) (#("ecularMap" 0 9 (fontified t)) . 8614) (undo-tree-id1953 . -9) (undo-tree-id1954 . -9) (undo-tree-id1955 . -9)) (23221 14238 581373 232000) 0 nil]) ((8561 . 8568) (#("f" 0 1 (fontified t)) . -8561) (undo-tree-id1935 . -1) (8560 . 8562) (#("f" 0 1 (fontified t)) . -8560) (undo-tree-id1937 . -1) (8558 . 8561) (#("0" 0 1 (fontified t face highlight-numbers-number)) . -8558) (undo-tree-id1938 . -1) 8559 (t 23221 13855 68418 459000)) ((8558 . 8559) (#("dif" 0 2 (fontified nil) 2 3 (fontified nil)) . 8558) (undo-tree-id1956 . -2) (undo-tree-id1957 . -2) (undo-tree-id1958 . -2) (undo-tree-id1959 . -3) (8560 . 8561) (#("ff" 0 1 (fontified nil) 1 2 (fontified nil)) . 8560) (undo-tree-id1960 . -1) (undo-tree-id1961 . -2) (8561 . 8562) (#("fuseMap" 0 7 (fontified t)) . 8561)) (23221 14238 781840 645000) 0 nil]) ((#("      " 0 6 (fontified t)) . -10111) (undo-tree-id1851 . -6) 10117 (10110 . 10117) 10071) nil (23221 14254 515693 522000) 0 nil]) ((#("
" 0 1 (fontified t)) . 10137) (undo-tree-id1852 . 1) (undo-tree-id1853 . -1)) nil (23221 13855 12342 328000) 0 nil]) ((#("

" 0 1 (fontified t) 1 2 (fontified t)) . 10111) (undo-tree-id1854 . -1) (undo-tree-id1855 . 2) (undo-tree-id1856 . -1) (undo-tree-id1857 . 1) (undo-tree-id1858 . 1) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -2) (undo-tree-id1863 . -1) 10112) nil (23221 13855 12365 303000) 0 nil]) ((10102 . 10109) (10090 . 10102) (#("GL_TRIANG" 0 9 (fontified t)) . -10090) (undo-tree-id1864 . -9) 10099 (10090 . 10099) (#("GL_TRI" 0 6 (fontified t)) . -10090) (undo-tree-id1865 . -6) 10096 (10090 . 10096) (10077 . 10091) (#("glDraw" 0 6 (fontified t)) . -10077) (undo-tree-id1866 . -6) 10083 (10077 . 10083) (10070 . 10077) (#("      " 0 6 (fontified t)) . 10070) (undo-tree-id1867 . -6) 10076 (10069 . 10076) 10067) nil (23221 13855 12386 101000) 0 nil]) ((10061 . 10068)) nil (23221 13855 12392 562000) 0 nil]) ((#(" " 0 1 (fontified t face font-lock-string-face)) . -10060) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1) 10061 (10055 . 10061) (10054 . 10056) (#("\"" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face) syntax-table #2=(15))) . -10054) (undo-tree-id1875 . -1) (undo-tree-id1876 . -1) (10054 . 10055) (10053 . 10055) (#("(" 0 1 (fontified nil face font-lock-type-face)) . -10053) (undo-tree-id1877 . -1) (undo-tree-id1878 . -1) (10049 . 10054) (10035 . 10049) (#("lighting" 0 8 (fontified t)) . -10035) (undo-tree-id1879 . -8) (undo-tree-id1880 . -5) 10043 (10038 . 10043) (#("t" 0 1 (fontified nil)) . -10038) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) (#("h" 0 1 (fontified t)) . -10039) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) 10040 (10035 . 10040) (10028 . 10035) 10025) nil (23221 13855 12433 356000) 0 nil]) ((10025 . 10026) (#("f" 0 1 (fontified t face highlight-numbers-number)) . -10025) (undo-tree-id1885 . -1) (10024 . 10026) (#("f" 0 1 (fontified t)) . -10024) (undo-tree-id1886 . -1) 10025 (10024 . 10025) (#("f" 0 1 (fontified t)) . -10024) (undo-tree-id1887 . -1) (10019 . 10025) (#("f" 0 1 (fontified t face highlight-numbers-number)) . -10019) (undo-tree-id1888 . -1) (10016 . 10020) (#("." 0 1 (fontified t)) . -10016) (undo-tree-id1889 . -1) (#("0" 0 1 (fontified t face highlight-numbers-number)) . -10017) (undo-tree-id1890 . -1) 10018 (10016 . 10018) (#("." 0 1 (fontified t)) . -10016) (undo-tree-id1891 . -1) (#("0" 0 1 (fontified t face highlight-numbers-number)) . -10017) (undo-tree-id1892 . -1) 10018 (10013 . 10018) (#("f" 0 1 (fontified t face highlight-numbers-number)) . -10013) (undo-tree-id1893 . -1) (10013 . 10014) (#("[" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face))) . -10013) (undo-tree-id1894 . -1) (undo-tree-id1895 . 1) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) (#("]" 0 1 (fontified t face (rainbow-delimiters-depth-3-face))) . 10014) (undo-tree-id1898 . 1) (undo-tree-id1899 . -1) (10013 . 10015) (#("[" 0 1 (fontified nil face highlight-numbers-number)) . -10013) (10010 . 10014) (10009 . 10011) (#("(" 0 1 (fontified nil)) . -10009) (10009 . 10010) (10008 . 10009) (#("f" 0 1 (fontified t)) . -10008) (undo-tree-id1900 . -1) (9989 . 10009) (#("r" 0 1 (fontified t)) . -9989) (undo-tree-id1901 . -1) (#("a" 0 1 (fontified t)) . -9990) (undo-tree-id1902 . -1) (#("d" 0 1 (fontified t)) . -9991) (undo-tree-id1903 . -1) (#("i" 0 1 (fontified t)) . -9992) (undo-tree-id1904 . -1) (#("a" 0 1 (fontified t)) . -9993) (undo-tree-id1905 . -1) (#("n" 0 1 (fontified t)) . -9994) (undo-tree-id1906 . -1) (#("s" 0 1 (fontified t)) . -9995) (undo-tree-id1907 . -1) 9996 (9994 . 9996) (#("n" 0 1 (fontified t)) . -9994) (undo-tree-id1908 . -1) 9995 (9988 . 9995) (9982 . 9988) (9981 . 9983) (#("(" 0 1 (fontified nil)) . -9981) (9967 . 9982) (9960 . 9967) 9959) nil (23221 13855 12508 982000) 0 nil]) ((9955 . 9960) (#("f" 0 1 (fontified t)) . -9955) (undo-tree-id1909 . -1) (9954 . 9956)) nil (23221 13855 12529 430000) 0 nil]) ((9943 . 9954) (#("/" 0 1 (fontified t)) . -9943) (undo-tree-id1910 . -1) (#(" " 0 1 (fontified t)) . -9944) (undo-tree-id1911 . -1) 9945 (9943 . 9945) (#("*" 0 1 (fontified t)) . -9943) (undo-tree-id1912 . -1) (undo-tree-id1913 . -1) (#("=" 0 1 (fontified t)) . -9944) (undo-tree-id1914 . -1) (#(" " 0 1 (fontified t)) . -9945) (undo-tree-id1915 . -1) (#("i" 0 1 (fontified t)) . -9946) (undo-tree-id1916 . -1) 9947) nil (23221 13855 12550 619000) 0 nil]) ((#(".enumerate" 0 1 (fontified t) 1 10 (fontified t)) . 9893)) nil (23221 13855 12556 825000) 0 nil]) ((#("i" 0 1 (fontified t)) . -9876) (undo-tree-id1917 . 1) (undo-tree-id1918 . -1) 9877) nil (23221 13855 12564 839000) 0 nil]) ((9871 . 9876) (#(" " 0 1 (fontified t)) . 9871) (#("," 0 1 (fontified t)) . 9871) (undo-tree-id1919 . -1) (9870 . 9871) (#("pos" 0 3 (fontified t)) . 9870)) nil (23221 13855 12573 408000) 0 nil]) ((9893 . 9903)) nil (23221 13855 12577 829000) 0 nil]) ((9873 . 9876)) nil (23221 13855 12580 834000) 0 nil]) ((9940 . 9944) (#("=" 0 1 (fontified t)) . -9940) (undo-tree-id1920 . -1) (#(" " 0 1 (fontified t)) . -9941) (undo-tree-id1921 . -1) (#("a" 0 1 (fontified t)) . -9942) (undo-tree-id1922 . -1) (#("n" 0 1 (fontified t)) . -9943) (undo-tree-id1923 . -1) (#("l" 0 1 (fontified t)) . -9944) (undo-tree-id1924 . -1) (#("e" 0 1 (fontified t)) . -9945) (undo-tree-id1925 . -1) 9946 (9934 . 9946) (9927 . 9934) 9908) nil (23221 13855 12600 233000) 0 nil]) ((#(";" 0 1 (fontified t)) . -9861) (undo-tree-id1926 . -1) 9862) nil (23221 13855 12609 103000) 0 nil]) ((9861 . 9862) (#(" " 0 1 (fontified t)) . -9861) (undo-tree-id1927 . -1) 9862 (9860 . 9862) (#("f" 0 1 (fontified t face highlight-numbers-number)) . -9860) (undo-tree-id1928 . -1) (9850 . 9861) (9843 . 9850) 9823) nil (23221 13855 12620 722000) 0 nil]) ((9817 . 9824) (#(" " 0 1 (fontified t)) . 9817) (undo-tree-id1929 . -1) 9818) nil (23221 13855 12628 733000) 0 nil]) ((#("      " 0 6 (fontified t)) . -9904) (undo-tree-id1930 . -6) 9910 (9903 . 9910) (t 23221 13667 466517 764000) 9898) nil (23221 13855 12636 730000) 0 nil]) ((9892 . 9899) (#("d" 0 1 (fontified t)) . -9892) (undo-tree-id1806 . -1) (#("o" 0 1 (fontified t)) . -9893) (undo-tree-id1807 . -1) 9894 (9893 . 9894) (9892 . 9893)) nil (23221 13667 418901 445000) 0 nil]) ((9835 . 9836) (#("f" 0 1 (fontified t face highlight-numbers-number)) . -9835) (undo-tree-id1808 . -1) (9832 . 9836) (9831 . 9833) (#("(" 0 1 (fontified nil)) . -9831) (9830 . 9832) (#("f" 0 1 (fontified t)) . -9830) (undo-tree-id1809 . -1) (9823 . 9831) (#(":" 0 1 (fontified t)) . -9823) (undo-tree-id1810 . -1) (#(" " 0 1 (fontified t)) . -9824) (undo-tree-id1811 . -1) (#("M" 0 1 (fontified t)) . -9825) (undo-tree-id1812 . -1) (#("a" 0 1 (fontified t)) . -9826) (undo-tree-id1813 . -1) (#("t" 0 1 (fontified t)) . -9827) (undo-tree-id1814 . -1) (#("4" 0 1 (fontified t)) . -9828) (undo-tree-id1815 . -1) (#("f" 0 1 (fontified t)) . -9829) (undo-tree-id1816 . -1) 9830) nil (23221 13667 418924 354000) 0 nil]) ((9885 . 9888) (#("m" 0 1 (fontified t)) . -9885) (undo-tree-id1817 . -1) (#("o" 0 1 (fontified t)) . -9886) (undo-tree-id1818 . -1) (#("d" 0 1 (fontified t face font-lock-builtin-face)) . -9887) (undo-tree-id1819 . -1) 9888 (#("e" 0 1 (fontified t)) . -9888) (undo-tree-id1820 . -1) (#("l" 0 1 (fontified t)) . -9889) (undo-tree-id1821 . -1) (#("," 0 1 (fontified t)) . -9890) (undo-tree-id1822 . -1) (#(" " 0 1 (fontified t)) . -9891) (undo-tree-id1823 . -1) 9892 (9885 . 9892) (9884 . 9886) (#("(" 0 1 (fontified nil)) . -9884) (9880 . 9885) (9867 . 9880) (#("k" 0 1 (fontified t)) . -9867) (undo-tree-id1824 . -1) 9868) nil (23221 13667 418946 485000) 0 nil]) ((9823 . 9825) (#(" " 0 1 (fontified t face font-lock-variable-name-face)) . -9823) (undo-tree-id1825 . -1) (#("=" 0 1 (fontified t)) . -9824) (undo-tree-id1826 . -1) (#(" " 0 1 (fontified t)) . -9825) (undo-tree-id1827 . -1) 9826) nil (23221 13667 418957 748000) 0 nil]) ((#("(" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . -9831) (undo-tree-id1828 . -1) (undo-tree-id1829 . 1) (undo-tree-id1830 . -1) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . -9832) (undo-tree-id1831 . 1) (undo-tree-id1832 . -1) 9833) nil (23221 13667 418967 539000) 0 nil]) ((9831 . 9833) (#("(" 0 1 (fontified nil)) . -9831) (9830 . 9832) (#("f" 0 1 (fontified t)) . -9830) (undo-tree-id1833 . -1) (9829 . 9831) (#("3" 0 1 (fontified t)) . -9829) (undo-tree-id1834 . -1) 9830 (9814 . 9830) (9809 . 9814) 9809) nil (23221 13667 418976 903000) 0 nil]) ((9846 . 9847) (9839 . 9846) (9838 . 9839) (9825 . 9838) (#("cube_po" 0 7 (fontified t)) . -9825) (undo-tree-id1835 . -7) 9832 (9814 . 9832) (#("f" 0 1 (fontified t)) . -9814) (undo-tree-id1836 . -1) (9809 . 9815) (#("    " 0 4 (fontified t)) . 9809) (undo-tree-id1837 . -4) 9813 (9808 . 9813) 9763) nil (23221 13667 418988 649000) 0 nil]) ((8465 . 8467) 8461) nil (23221 13667 418993 237000) 0 nil]) ((#("    # lampShader.use()
    # lampShader.set(\"projection\", projection)
    # lampShader.set(\"view\", view)

    # var model = translate(mat4(1.0f), lampPos).scale(vec3(0.2f))
    # lampShader.set(\"model\", model)

    # glBindVertexArray(lightVAO)
    # glDrawArrays(GL_TRIANGLES, 0, 36)
" 0 4 (fontified t) 4 5 (syntax-table #1=(11) fontified t face font-lock-comment-delimiter-face) 5 6 (fontified t face font-lock-comment-delimiter-face) 6 20 (fontified t face font-lock-comment-face) 20 21 (fontified t face font-lock-comment-face) 21 22 (fontified t face font-lock-comment-face) 22 23 (fontified t face font-lock-comment-face) 23 27 (fontified t) 27 28 (syntax-table #1# fontified t face font-lock-comment-delimiter-face) 28 29 (fontified t face font-lock-comment-delimiter-face) 29 40 (fontified t face font-lock-comment-face) 40 43 (fontified t face font-lock-comment-face) 43 44 (fontified t face font-lock-comment-face) 44 45 (fontified t face font-lock-comment-face) 45 55 (fontified t face font-lock-comment-face) 55 56 (fontified t face font-lock-comment-face) 56 68 (fontified t face font-lock-comment-face) 68 69 (fontified t face font-lock-comment-face) 69 70 (fontified t face font-lock-comment-face) 70 74 (fontified t) 74 75 (syntax-table #1# fontified t face font-lock-comment-delimiter-face) 75 76 (fontified t face font-lock-comment-delimiter-face) 76 83 (fontified t face font-lock-comment-face) 83 84 (fontified t face font-lock-comment-face) 84 85 (fontified t face font-lock-comment-face) 85 87 (fontified t face font-lock-comment-face) 87 90 (fontified t face font-lock-comment-face) 90 91 (fontified t face font-lock-comment-face) 91 92 (fontified t face font-lock-comment-face) 92 96 (fontified t face font-lock-comment-face) 96 97 (fontified t face font-lock-comment-face) 97 103 (fontified t face font-lock-comment-face) 103 104 (fontified t face font-lock-comment-face) 104 105 (fontified t face font-lock-comment-face) 105 106 (fontified t) 106 108 (fontified t) 108 110 (fontified t) 110 111 (syntax-table #1# fontified t face font-lock-comment-delimiter-face) 111 112 (fontified t face font-lock-comment-delimiter-face) 112 115 (fontified t face font-lock-comment-face) 115 116 (fontified t face font-lock-comment-face) 116 117 (fontified t face font-lock-comment-face) 117 122 (fontified t face font-lock-comment-face) 122 133 (fontified t face font-lock-comment-face) 133 134 (fontified t face font-lock-comment-face) 134 138 (fontified t face font-lock-comment-face) 138 139 (fontified t face font-lock-comment-face) 139 140 (fontified t face font-lock-comment-face) 140 141 (fontified t face font-lock-comment-face) 141 143 (fontified t face font-lock-comment-face) 143 144 (fontified t face font-lock-comment-face) 144 147 (fontified t face font-lock-comment-face) 147 148 (fontified t face font-lock-comment-face) 148 153 (fontified t face font-lock-comment-face) 153 154 (fontified t face font-lock-comment-face) 154 160 (fontified t face font-lock-comment-face) 160 161 (fontified t face font-lock-comment-face) 161 163 (fontified t face font-lock-comment-face) 163 165 (fontified t face font-lock-comment-face) 165 166 (fontified t face font-lock-comment-face) 166 167 (fontified t face font-lock-comment-face) 167 168 (fontified t face font-lock-comment-face) 168 170 (fontified t face font-lock-comment-face) 170 171 (fontified t face font-lock-comment-face) 171 172 (fontified t face font-lock-comment-face) 172 173 (fontified t face font-lock-comment-face) 173 177 (fontified t) 177 178 (syntax-table #1# fontified t face font-lock-comment-delimiter-face) 178 179 (fontified t face font-lock-comment-delimiter-face) 179 190 (fontified t face font-lock-comment-face) 190 193 (fontified t face font-lock-comment-face) 193 194 (fontified t face font-lock-comment-face) 194 195 (fontified t face font-lock-comment-face) 195 198 (fontified t face font-lock-comment-face) 198 199 (fontified t face font-lock-comment-face) 199 200 (fontified t face font-lock-comment-face) 200 201 (fontified t face font-lock-comment-face) 201 203 (fontified t face font-lock-comment-face) 203 207 (fontified t face font-lock-comment-face) 207 208 (fontified t face font-lock-comment-face) 208 209 (fontified t face font-lock-comment-face) 209 210 (fontified t face font-lock-comment-face) 210 211 (fontified t) 211 212 (fontified t) 212 215 (fontified t) 215 216 (fontified t syntax-table #1# face font-lock-comment-delimiter-face) 216 217 (fontified t face font-lock-comment-delimiter-face) 217 230 (fontified t face font-lock-comment-face) 230 234 (fontified t face font-lock-comment-face) 234 235 (fontified t face font-lock-comment-face) 235 237 (fontified t face font-lock-comment-face) 237 240 (fontified t face font-lock-comment-face) 240 243 (fontified t face font-lock-comment-face) 243 244 (fontified t face font-lock-comment-face) 244 245 (fontified t face font-lock-comment-face) 245 249 (fontified t) 249 250 (syntax-table #1# fontified t face font-lock-comment-delimiter-face) 250 251 (fontified t face font-lock-comment-delimiter-face) 251 260 (fontified t face font-lock-comment-face) 260 263 (fontified t face font-lock-comment-face) 263 264 (fontified t face font-lock-comment-face) 264 278 (fontified t face font-lock-comment-face) 278 279 (fontified t face font-lock-comment-face) 279 281 (fontified t face font-lock-comment-face) 281 283 (fontified t face font-lock-comment-face) 283 284 (fontified t face font-lock-comment-face) 284 285 (fontified t face font-lock-comment-face)) . 9807) (undo-tree-id1838 . -249) (undo-tree-id1839 . -70) (undo-tree-id1840 . -4) (undo-tree-id1841 . -249) (undo-tree-id1842 . -210) (undo-tree-id1843 . 75) (undo-tree-id1844 . 75) (undo-tree-id1845 . -103) (undo-tree-id1846 . -245) (undo-tree-id1847 . -285) (undo-tree-id1848 . -249) (undo-tree-id1849 . -4) (undo-tree-id1850 . -249) 10056) nil (23221 13667 419011 623000) 0 nil]) ((10056 . 10058) (10022 . 10024) 10088 (t 23221 13515 620696 809000)) nil (23221 13667 419015 841000) 0 nil]) ((9794 . 9805) (#("diffuseMap" 0 10 (fontified t)) . 9794)) nil (23221 13515 569657 148000) 0 nil]) ((9758 . 9759) (#("0" 0 1 (fontified t)) . 9758) (undo-tree-id1800 . -1) (undo-tree-id1801 . -1) (undo-tree-id1802 . -1) (undo-tree-id1803 . -1) (undo-tree-id1804 . -1) (undo-tree-id1805 . -1)) nil (23221 13515 569675 805000) 0 nil] [nil nil ((9760 . 9761)) ((#("h" 0 1 (fontified t)) . 9760) (undo-tree-id1796 . -1) (undo-tree-id1797 . -1) (undo-tree-id1798 . -1) (undo-tree-id1799 . -1)) (23221 13509 461511 527000) 0 nil]) ((nil rear-nonsticky nil 9731 . 9732) (#("
" 0 1 (fontified nil)) . -9805) (undo-tree-id1750 . -1) (9727 . 9806) 9726) nil (23221 13509 461890 991000) 0 nil]) ((9724 . 9727) (#("a" 0 1 (fontified t face font-lock-comment-face)) . -9724) (undo-tree-id1751 . -1) (#("m" 0 1 (fontified t face font-lock-comment-face)) . -9725) (undo-tree-id1752 . -1) (#("p" 0 1 (fontified t face font-lock-comment-face)) . -9726) (undo-tree-id1753 . -1) 9727 (9714 . 9727) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -9714) (undo-tree-id1754 . -1) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -9715) (undo-tree-id1755 . -1) (#("h" 0 1 (fontified t face font-lock-comment-face)) . -9716) (undo-tree-id1756 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -9717) (undo-tree-id1757 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -9718) (undo-tree-id1758 . -1) 9719 (9708 . 9719) (9703 . 9708) (#("    " 0 4 (fontified t)) . 9703) (undo-tree-id1759 . -4) 9707 (9702 . 9707) 9700) nil (23221 13509 461563 634000) 0 nil]) ((9691 . 9701) (#("diffuseM" 0 8 (fontified t)) . -9691) (undo-tree-id1760 . -8) (undo-tree-id1761 . -7) 9699 (9694 . 9699) (#("f" 0 1 (fontified t)) . -9694) (undo-tree-id1762 . -1) (9693 . 9695) (#("f" 0 1 (fontified t)) . -9693) (undo-tree-id1763 . -1) (9688 . 9694) (#("d" 0 1 (fontified t)) . -9688) (undo-tree-id1764 . -1) 9689 (9676 . 9689) (#("g" 0 1 (fontified t)) . -9676) (undo-tree-id1765 . -1) 9677 (9676 . 9677) (#("(" 0 1 (fontified nil face (rainbow-delimiters-depth-2-face))) . -9676) (undo-tree-id1766 . -1) (undo-tree-id1767 . 1) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . 9677) (undo-tree-id1770 . 1) (undo-tree-id1771 . -1) (9676 . 9678) (#("(" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face))) . -9676) (9676 . 9677) (9662 . 9677) (#("glBindTex" 0 9 (fontified t)) . -9662) (undo-tree-id1772 . -9) 9671 (9662 . 9671) (9657 . 9662) 9636) nil (23221 13509 461611 548000) 0 nil]) ((9636 . 9637) (#("a" 0 1 (fontified t)) . -9636) (undo-tree-id1773 . -1) (#("t" 0 1 (fontified t)) . -9637) (undo-tree-id1774 . -1) (#("e" 0 1 (fontified t)) . -9638) (undo-tree-id1775 . -1) 9639) nil (23221 13509 461628 749000) 0 nil]) ((9654 . 9658) (9647 . 9654) (9646 . 9648) (#("(" 0 1 (fontified nil)) . -9646) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) (9633 . 9647) (9629 . 9633) (9624 . 9629) 9623) nil (23221 13509 461641 722000) 0 nil]) ((9616 . 9624) (#("f" 0 1 (fontified t face font-lock-comment-face)) . -9616) (undo-tree-id1778 . -1) (9615 . 9617) (#("f" 0 1 (fontified t face font-lock-comment-face)) . -9615) (undo-tree-id1779 . -1) (9606 . 9616) (9601 . 9606) 9601) nil (23221 13509 461653 868000) 0 nil]) ((#("    // bind 
" 0 7 (fontified t) 7 11 (fontified t face font-lock-keyword-face) 11 12 (fontified t) 12 13 (fontified t)) . 9601) (undo-tree-id1780 . -13) (undo-tree-id1781 . -4) (undo-tree-id1782 . -5) (undo-tree-id1783 . -7) (undo-tree-id1784 . -11) (undo-tree-id1785 . -7) (undo-tree-id1786 . -11) (undo-tree-id1787 . -4) (undo-tree-id1788 . -5) (undo-tree-id1789 . -4) (undo-tree-id1790 . -5) (undo-tree-id1791 . -4) (undo-tree-id1792 . -5) (undo-tree-id1793 . -13) (undo-tree-id1794 . -13)) nil (23221 13509 461687 215000) 0 nil]) ((9605 . 9613) (9600 . 9605) (#("    " 0 4 (fontified t)) . 9600) (undo-tree-id1795 . -4) 9604 (9599 . 9604) 9566) nil (23221 13509 461697 876000) 0 nil]) ((9675 . 9677) (9628 . 9630) (9605 . 9607) 9685 (t 23221 13261 330206 405000)) nil (23221 13509 461703 713000) 0 nil]) ((#("
" 0 1 (fontified t)) . 8235) (undo-tree-id1694 . -1)) nil (23221 13261 284394 622000) 0 nil]) ((#("
" 0 1 (fontified t)) . 8979) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1)) nil (23221 13261 284424 372000) 0 nil]) ((#("    # var
    #   objectColor = vec3f(1.0f, 0.5f, 0.31f)
    #   lightColor = vec3f(1.0f, 1.0f, 1.0f)
      # lightingModel = mat4f(1.0f)
    #   x = 0.0f + 1.0 * sin(0.001 * currentFrame)
    #   y = 0.0f + 1.0 * cos(0.001 * currentFrame)

    # lampPos = vec3f(x, 0.0f, y)
" 0 4 (fontified t) 4 5 (fontified t syntax-table #1# face font-lock-comment-delimiter-face) 5 6 (fontified t face font-lock-comment-delimiter-face) 6 9 (fontified t face font-lock-comment-face) 9 10 (fontified t face font-lock-comment-face) 10 14 (fontified t) 14 15 (syntax-table #1# fontified t face font-lock-comment-delimiter-face) 15 16 (fontified t face font-lock-comment-delimiter-face) 16 18 (fontified t face font-lock-comment-face) 18 37 (fontified t face font-lock-comment-face) 37 38 (fontified t face font-lock-comment-face) 38 39 (fontified t face font-lock-comment-face) 39 40 (fontified t face font-lock-comment-face) 40 42 (fontified t face font-lock-comment-face) 42 44 (fontified t face font-lock-comment-face) 44 45 (fontified t face font-lock-comment-face) 45 46 (fontified t face font-lock-comment-face) 46 48 (fontified t face font-lock-comment-face) 48 50 (fontified t face font-lock-comment-face) 50 51 (fontified t face font-lock-comment-face) 51 52 (fontified t face font-lock-comment-face) 52 55 (fontified t face font-lock-comment-face) 55 56 (fontified t face font-lock-comment-face) 56 57 (fontified t face font-lock-comment-face) 57 61 (fontified t) 61 62 (syntax-table #1# fontified t face font-lock-comment-delimiter-face) 62 63 (fontified t face font-lock-comment-delimiter-face) 63 65 (fontified t face font-lock-comment-face) 65 78 (fontified t face font-lock-comment-face) 78 83 (fontified t face font-lock-comment-face) 83 84 (fontified t face font-lock-comment-face) 84 85 (fontified t face font-lock-comment-face) 85 86 (fontified t face font-lock-comment-face) 86 88 (fontified t face font-lock-comment-face) 88 90 (fontified t face font-lock-comment-face) 90 91 (fontified t face font-lock-comment-face) 91 92 (fontified t face font-lock-comment-face) 92 94 (fontified t face font-lock-comment-face) 94 96 (fontified t face font-lock-comment-face) 96 97 (fontified t face font-lock-comment-face) 97 98 (fontified t face font-lock-comment-face) 98 100 (fontified t face font-lock-comment-face) 100 101 (fontified t face font-lock-comment-face) 101 102 (fontified t face font-lock-comment-face) 102 106 (fontified t) 106 108 (fontified t) 108 109 (syntax-table #1# fontified t face font-lock-comment-delimiter-face) 109 110 (fontified t face font-lock-comment-delimiter-face) 110 131 (fontified t face font-lock-comment-face) 131 132 (fontified t face font-lock-comment-face) 132 133 (fontified t face font-lock-comment-face) 133 134 (fontified t face font-lock-comment-face) 134 136 (fontified t face font-lock-comment-face) 136 137 (fontified t face font-lock-comment-face) 137 138 (fontified t face font-lock-comment-face) 138 142 (fontified t) 142 143 (syntax-table #1# fontified t face font-lock-comment-delimiter-face) 143 144 (fontified t face font-lock-comment-delimiter-face) 144 146 (fontified t face font-lock-comment-face) 146 150 (fontified t face font-lock-comment-face) 150 151 (fontified t face font-lock-comment-face) 151 152 (fontified t face font-lock-comment-face) 152 154 (fontified t face font-lock-comment-face) 154 157 (fontified t face font-lock-comment-face) 157 158 (fontified t face font-lock-comment-face) 158 159 (fontified t face font-lock-comment-face) 159 160 (fontified t face font-lock-comment-face) 160 166 (fontified t face font-lock-comment-face) 166 167 (fontified t face font-lock-comment-face) 167 168 (fontified t face font-lock-comment-face) 168 169 (fontified t face font-lock-comment-face) 169 172 (fontified t face font-lock-comment-face) 172 187 (fontified t face font-lock-comment-face) 187 188 (fontified t face font-lock-comment-face) 188 189 (fontified t face font-lock-comment-face) 189 193 (fontified t) 193 194 (syntax-table #1# fontified t face font-lock-comment-delimiter-face) 194 195 (fontified t face font-lock-comment-delimiter-face) 195 197 (fontified t face font-lock-comment-face) 197 201 (fontified t face font-lock-comment-face) 201 202 (fontified t face font-lock-comment-face) 202 203 (fontified t face font-lock-comment-face) 203 205 (fontified t face font-lock-comment-face) 205 208 (fontified t face font-lock-comment-face) 208 209 (fontified t face font-lock-comment-face) 209 210 (fontified t face font-lock-comment-face) 210 211 (fontified t face font-lock-comment-face) 211 217 (fontified t face font-lock-comment-face) 217 218 (fontified t face font-lock-comment-face) 218 219 (fontified t face font-lock-comment-face) 219 220 (fontified t face font-lock-comment-face) 220 223 (fontified t face font-lock-comment-face) 223 238 (fontified t face font-lock-comment-face) 238 239 (fontified t face font-lock-comment-face) 239 240 (fontified t face font-lock-comment-face) 240 241 (fontified t) 241 245 (fontified t) 245 246 (syntax-table #1# fontified t face font-lock-comment-delimiter-face) 246 247 (fontified t face font-lock-comment-delimiter-face) 247 262 (fontified t face font-lock-comment-face) 262 263 (fontified t face font-lock-comment-face) 263 266 (fontified t face font-lock-comment-face) 266 267 (fontified t face font-lock-comment-face) 267 268 (fontified t face font-lock-comment-face) 268 270 (fontified t face font-lock-comment-face) 270 273 (fontified t face font-lock-comment-face) 273 274 (fontified t face font-lock-comment-face) 274 275 (fontified t face font-lock-comment-face)) . 8980) (undo-tree-id1712 . 199) (undo-tree-id1713 . 154) (undo-tree-id1714 . -245) (undo-tree-id1715 . -76) (undo-tree-id1716 . 199) (undo-tree-id1717 . 199) (undo-tree-id1718 . 199) (undo-tree-id1719 . 199) (undo-tree-id1720 . 199) (undo-tree-id1721 . 199) (undo-tree-id1722 . 118) (undo-tree-id1723 . 154) (undo-tree-id1724 . -76) (undo-tree-id1725 . -157) (undo-tree-id1726 . 67) (undo-tree-id1727 . 118) (undo-tree-id1728 . 34) (undo-tree-id1729 . 35) (undo-tree-id1730 . -157) (undo-tree-id1731 . -241) (undo-tree-id1732 . 34) (undo-tree-id1733 . 34) (undo-tree-id1734 . -241) (undo-tree-id1735 . -254) (undo-tree-id1736 . -254) (undo-tree-id1737 . -274) (undo-tree-id1738 . -274) (undo-tree-id1739 . -260) (undo-tree-id1740 . -4) (undo-tree-id1741 . -245) (undo-tree-id1742 . 28) (undo-tree-id1743 . 28) (undo-tree-id1744 . -241) (undo-tree-id1745 . -275) (undo-tree-id1746 . -4) (undo-tree-id1747 . -245) (undo-tree-id1748 . -4) (undo-tree-id1749 . -245) 9225 (t 23221 12455 925236 570000)) nil (23221 13261 284475 38000) 0 nil]) ((8984 . 8986) 8986) nil (23221 12455 878948 575000) 0 nil]) ((9086 . 9088) 9112 (t 23221 12451 373761 494000)) nil (23221 12455 878955 683000) 0 nil] [nil nil ((#("      lightingModel = mat4f(1.0f)
" 0 4 (fontified t) 4 6 (fontified t) 6 27 (fontified t) 27 28 (fontified t face (rainbow-delimiters-depth-1-face)) 28 29 (fontified t face highlight-numbers-number) 29 30 (fontified t) 30 32 (fontified t face highlight-numbers-number) 32 33 (fontified t face (rainbow-delimiters-depth-1-face)) 33 34 (fontified t)) . 9080) (undo-tree-id1677 . 17) (undo-tree-id1678 . 17) (undo-tree-id1679 . -34) (undo-tree-id1680 . 7) (undo-tree-id1681 . -28) (undo-tree-id1682 . 2) (undo-tree-id1683 . -33) (undo-tree-id1684 . -32) (undo-tree-id1685 . -6) (undo-tree-id1686 . -19) (undo-tree-id1687 . 2) (undo-tree-id1688 . -27) (undo-tree-id1689 . -28) (undo-tree-id1690 . 7) (undo-tree-id1691 . -28) (undo-tree-id1692 . 2) (undo-tree-id1693 . -33) 9112 (t 23221 12451 373761 494000)) ((9080 . 9114)) (23221 12453 721084 75000) 0 nil]) ((9799 . 9800) (#("f" 0 1 (fontified t face highlight-numbers-number)) . -9799) (undo-tree-id1671 . -1) (9799 . 9800) (#("9" 0 1 (fontified t face highlight-numbers-number)) . -9799) (undo-tree-id1672 . -1) 9800 (9796 . 9800) (9795 . 9797) (#("(" 0 1 (fontified nil)) . -9795) (9794 . 9796) (#("f" 0 1 (fontified t)) . -9794) (undo-tree-id1673 . -1) (9793 . 9795) (#("3" 0 1 (fontified t)) . -9793) (undo-tree-id1674 . -1) (#("f" 0 1 (fontified t)) . -9794) (undo-tree-id1675 . -1) 9795 (9794 . 9795) (#("f" 0 1 (fontified t)) . -9794) (undo-tree-id1676 . -1) (9790 . 9795)) nil (23221 12453 721600 860000) 0 nil]) ((#("lightingModel" 0 13 (fontified t)) . 9790)) nil (23221 12451 294834 918000) 0 nil]) ((#("# " 0 1 (syntax-table #1# fontified t face font-lock-comment-delimiter-face) 1 2 (fontified t face font-lock-comment-delimiter-face)) . -9084)) nil (23221 12451 294837 244000) 0 nil]) ((#("# " 0 1 (fontified t syntax-table #1# face font-lock-comment-delimiter-face) 1 2 (fontified t face font-lock-comment-delimiter-face)) . -8984) (t 23221 12422 694099 532000)) nil (23221 12451 294839 611000) 0 nil]) ((#("# " 0 1 (fontified t face font-lock-comment-delimiter-face syntax-table #1#) 1 2 (fontified t face font-lock-comment-delimiter-face)) . -9766) (#("# " 0 1 (fontified t face font-lock-comment-delimiter-face syntax-table #1#) 1 2 (fontified t face font-lock-comment-delimiter-face)) . -9729) (#("# " 0 1 (syntax-table #1# fontified t face font-lock-comment-delimiter-face) 1 2 (fontified t face font-lock-comment-delimiter-face)) . -9680) 9766) nil (23221 12422 676051 955000) 0 nil]) ((#("    # lightingShader.set(\"lightColor\", lampColor)
    # lightingShader.set(\"lightPos\", lampPos)
" 0 4 (fontified t) 4 5 (syntax-table #1# fontified t face font-lock-comment-delimiter-face) 5 6 (fontified t face font-lock-comment-delimiter-face) 6 21 (fontified t face font-lock-comment-face) 21 24 (fontified t face font-lock-comment-face) 24 25 (fontified t face font-lock-comment-face) 25 26 (fontified t face font-lock-comment-face) 26 36 (fontified t face font-lock-comment-face) 36 37 (fontified t face font-lock-comment-face) 37 48 (fontified t face font-lock-comment-face) 48 49 (fontified t face font-lock-comment-face) 49 50 (fontified t face font-lock-comment-face) 50 54 (fontified t) 54 55 (syntax-table #1# fontified t face font-lock-comment-delimiter-face) 55 56 (fontified t face font-lock-comment-delimiter-face) 56 71 (fontified t face font-lock-comment-face) 71 74 (fontified t face font-lock-comment-face) 74 75 (fontified t face font-lock-comment-face) 75 76 (fontified t face font-lock-comment-face) 76 82 (fontified t face font-lock-comment-face) 82 84 (fontified t face font-lock-comment-face) 84 85 (fontified t face font-lock-comment-face) 85 94 (fontified t face font-lock-comment-face) 94 95 (fontified t face font-lock-comment-face) 95 96 (fontified t face font-lock-comment-face)) . 9675) (undo-tree-id890 . -95) (undo-tree-id891 . -48) (undo-tree-id892 . -95) (undo-tree-id893 . 2) (undo-tree-id894 . 2) (undo-tree-id895 . -50) (undo-tree-id896 . -96) (undo-tree-id897 . -95) (undo-tree-id898 . -25) (undo-tree-id899 . -26) (undo-tree-id900 . -25) (undo-tree-id901 . -26) (undo-tree-id902 . 48) (undo-tree-id903 . -75) (undo-tree-id904 . -76) (undo-tree-id905 . -24) (undo-tree-id906 . -25) (undo-tree-id907 . -96) (undo-tree-id908 . 48) (undo-tree-id909 . 48) (undo-tree-id910 . -48) (undo-tree-id911 . -95) (undo-tree-id912 . -75) (undo-tree-id913 . -76) (undo-tree-id914 . -24) (undo-tree-id915 . -25) (undo-tree-id916 . 1) (undo-tree-id917 . 48) (undo-tree-id918 . -94) (undo-tree-id919 . -95) (undo-tree-id920 . -94) (undo-tree-id921 . -95) (undo-tree-id922 . -94) (undo-tree-id923 . -95) (undo-tree-id924 . -94) (undo-tree-id925 . -95) (undo-tree-id926 . -84) (undo-tree-id927 . -85) (undo-tree-id928 . -84) (undo-tree-id929 . -85) (undo-tree-id930 . -94) (undo-tree-id931 . -95) (undo-tree-id932 . -94) (undo-tree-id933 . -95) (undo-tree-id934 . -74) (undo-tree-id935 . -75) (undo-tree-id936 . 22) (undo-tree-id937 . -75) (undo-tree-id938 . 2) (undo-tree-id939 . -95) 9770) nil (23221 12422 676152 975000) 0 nil]) ((9672 . 9673) (#("f" 0 1 (fontified t face highlight-numbers-number)) . -9672) (undo-tree-id940 . -1) (9671 . 9673) (#("f" 0 1 (fontified nil)) . -9671) (undo-tree-id941 . 1) 9672 (9671 . 9672) (#("f" 0 1 (fontified t)) . -9671) (undo-tree-id942 . -1) (9668 . 9672)) nil (23221 12422 676171 964000) 0 nil]) ((#(")" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . 9668) (undo-tree-id943 . 1) (undo-tree-id944 . 1) (undo-tree-id945 . 1) (undo-tree-id946 . 1) (undo-tree-id947 . 1) (undo-tree-id948 . 1) (undo-tree-id949 . 1) (undo-tree-id950 . 1) (undo-tree-id951 . 1) (undo-tree-id952 . 1) (undo-tree-id953 . 1) (undo-tree-id954 . 1) (undo-tree-id955 . 1) (undo-tree-id956 . 1) (undo-tree-id957 . 1) (undo-tree-id958 . 1) (undo-tree-id959 . 1) (undo-tree-id960 . 1) (undo-tree-id961 . 1) (undo-tree-id962 . 1) (undo-tree-id963 . 1) (undo-tree-id964 . 1) (undo-tree-id965 . -1) (undo-tree-id966 . 1) (undo-tree-id967 . 1)) nil (23221 12422 676236 727000) 0 nil]) ((#("vec3f(1.0f, 1.0f, 1.0f" 0 5 (fontified t) 5 6 (fontified t face (rainbow-delimiters-depth-2-face)) 6 7 (fontified t face highlight-numbers-number) 7 8 (fontified t) 8 9 (fontified t face highlight-numbers-number) 9 10 (fontified t face highlight-numbers-number) 10 12 (fontified t) 12 13 (fontified t face highlight-numbers-number) 13 14 (fontified t) 14 15 (fontified t face highlight-numbers-number) 15 16 (fontified t face highlight-numbers-number) 16 18 (fontified t) 18 19 (fontified t face highlight-numbers-number) 19 20 (fontified t) 20 21 (fontified t face highlight-numbers-number) 21 22 (fontified t face highlight-numbers-number)) . 9668) (undo-tree-id968 . -6) (undo-tree-id969 . -7) (undo-tree-id970 . -6) (undo-tree-id971 . -7) (undo-tree-id972 . -6) (undo-tree-id973 . -7) (undo-tree-id974 . -12) (undo-tree-id975 . -13) (undo-tree-id976 . -12) (undo-tree-id977 . -13) (undo-tree-id978 . -12) (undo-tree-id979 . -13) (undo-tree-id980 . -18) (undo-tree-id981 . -19) (undo-tree-id982 . -18) (undo-tree-id983 . -19) (undo-tree-id984 . -18) (undo-tree-id985 . -19) (undo-tree-id986 . -6) (undo-tree-id987 . -7) (undo-tree-id988 . -6) (undo-tree-id989 . -7) (undo-tree-id990 . -6) (undo-tree-id991 . -7) (undo-tree-id992 . -12) (undo-tree-id993 . -13) (undo-tree-id994 . -12) (undo-tree-id995 . -13) (undo-tree-id996 . -12) (undo-tree-id997 . -13) (undo-tree-id998 . -18) (undo-tree-id999 . -19) (undo-tree-id1000 . -18) (undo-tree-id1001 . -19) (undo-tree-id1002 . -18) (undo-tree-id1003 . -19) (undo-tree-id1004 . -6) (undo-tree-id1005 . -7) (undo-tree-id1006 . -6) (undo-tree-id1007 . -7) (undo-tree-id1008 . -6) (undo-tree-id1009 . -7) (undo-tree-id1010 . -12) (undo-tree-id1011 . -13) (undo-tree-id1012 . -12) (undo-tree-id1013 . -13) (undo-tree-id1014 . -12) (undo-tree-id1015 . -13) (undo-tree-id1016 . -18) (undo-tree-id1017 . -19) (undo-tree-id1018 . -18) (undo-tree-id1019 . -19) (undo-tree-id1020 . -18) (undo-tree-id1021 . -19) (undo-tree-id1022 . -6) (undo-tree-id1023 . -7) (undo-tree-id1024 . -6) (undo-tree-id1025 . -7) (undo-tree-id1026 . -6) (undo-tree-id1027 . -7) (undo-tree-id1028 . -12) (undo-tree-id1029 . -13) (undo-tree-id1030 . -12) (undo-tree-id1031 . -13) (undo-tree-id1032 . -12) (undo-tree-id1033 . -13) (undo-tree-id1034 . -18) (undo-tree-id1035 . -19) (undo-tree-id1036 . -18) (undo-tree-id1037 . -19) (undo-tree-id1038 . -18) (undo-tree-id1039 . -19) (undo-tree-id1040 . -6) (undo-tree-id1041 . -7) (undo-tree-id1042 . -6) (undo-tree-id1043 . -7) (undo-tree-id1044 . -6) (undo-tree-id1045 . -7) (undo-tree-id1046 . -12) (undo-tree-id1047 . -13) (undo-tree-id1048 . -12) (undo-tree-id1049 . -13) (undo-tree-id1050 . -12) (undo-tree-id1051 . -13) (undo-tree-id1052 . -18) (undo-tree-id1053 . -19) (undo-tree-id1054 . -18) (undo-tree-id1055 . -19) (undo-tree-id1056 . -18) (undo-tree-id1057 . -19) (undo-tree-id1058 . -6) (undo-tree-id1059 . -7) (undo-tree-id1060 . -6) (undo-tree-id1061 . -7) (undo-tree-id1062 . -6) (undo-tree-id1063 . -7) (undo-tree-id1064 . -12) (undo-tree-id1065 . -13) (undo-tree-id1066 . -12) (undo-tree-id1067 . -13) (undo-tree-id1068 . -12) (undo-tree-id1069 . -13) (undo-tree-id1070 . -18) (undo-tree-id1071 . -19) (undo-tree-id1072 . -18) (undo-tree-id1073 . -19) (undo-tree-id1074 . -18) (undo-tree-id1075 . -19) (undo-tree-id1076 . -6) (undo-tree-id1077 . -7) (undo-tree-id1078 . -6) (undo-tree-id1079 . -7) (undo-tree-id1080 . -6) (undo-tree-id1081 . -7) (undo-tree-id1082 . -12) (undo-tree-id1083 . -13) (undo-tree-id1084 . -12) (undo-tree-id1085 . -13) (undo-tree-id1086 . -12) (undo-tree-id1087 . -13) (undo-tree-id1088 . -18) (undo-tree-id1089 . -19) (undo-tree-id1090 . -18) (undo-tree-id1091 . -19) (undo-tree-id1092 . -18) (undo-tree-id1093 . -19) (undo-tree-id1094 . -6) (undo-tree-id1095 . -7) (undo-tree-id1096 . -6) (undo-tree-id1097 . -7) (undo-tree-id1098 . -6) (undo-tree-id1099 . -7) (undo-tree-id1100 . -12) (undo-tree-id1101 . -13) (undo-tree-id1102 . -12) (undo-tree-id1103 . -13) (undo-tree-id1104 . -12) (undo-tree-id1105 . -13) (undo-tree-id1106 . -18) (undo-tree-id1107 . -19) (undo-tree-id1108 . -18) (undo-tree-id1109 . -19) (undo-tree-id1110 . -18) (undo-tree-id1111 . -19) (undo-tree-id1112 . -6) (undo-tree-id1113 . -7) (undo-tree-id1114 . -6) (undo-tree-id1115 . -7) (undo-tree-id1116 . -6) (undo-tree-id1117 . -7) (undo-tree-id1118 . -12) (undo-tree-id1119 . -13) (undo-tree-id1120 . -12) (undo-tree-id1121 . -13) (undo-tree-id1122 . -12) (undo-tree-id1123 . -13) (undo-tree-id1124 . -18) (undo-tree-id1125 . -19) (undo-tree-id1126 . -18) (undo-tree-id1127 . -19) (undo-tree-id1128 . -18) (undo-tree-id1129 . -19) (undo-tree-id1130 . -6) (undo-tree-id1131 . -7) (undo-tree-id1132 . -6) (undo-tree-id1133 . -7) (undo-tree-id1134 . -6) (undo-tree-id1135 . -7) (undo-tree-id1136 . -12) (undo-tree-id1137 . -13) (undo-tree-id1138 . -12) (undo-tree-id1139 . -13) (undo-tree-id1140 . -12) (undo-tree-id1141 . -13) (undo-tree-id1142 . -18) (undo-tree-id1143 . -19) (undo-tree-id1144 . -18) (undo-tree-id1145 . -19) (undo-tree-id1146 . -18) (undo-tree-id1147 . -19) (undo-tree-id1148 . -6) (undo-tree-id1149 . -7) (undo-tree-id1150 . -6) (undo-tree-id1151 . -7) (undo-tree-id1152 . -6) (undo-tree-id1153 . -7) (undo-tree-id1154 . -12) (undo-tree-id1155 . -13) (undo-tree-id1156 . -12) (undo-tree-id1157 . -13) (undo-tree-id1158 . -12) (undo-tree-id1159 . -13) (undo-tree-id1160 . -18) (undo-tree-id1161 . -19) (undo-tree-id1162 . -18) (undo-tree-id1163 . -19) (undo-tree-id1164 . -18) (undo-tree-id1165 . -19) (undo-tree-id1166 . -6) (undo-tree-id1167 . -7) (undo-tree-id1168 . -6) (undo-tree-id1169 . -7) (undo-tree-id1170 . -6) (undo-tree-id1171 . -7) (undo-tree-id1172 . -12) (undo-tree-id1173 . -13) (undo-tree-id1174 . -12) (undo-tree-id1175 . -13) (undo-tree-id1176 . -12) (undo-tree-id1177 . -13) (undo-tree-id1178 . -18) (undo-tree-id1179 . -19) (undo-tree-id1180 . -18) (undo-tree-id1181 . -19) (undo-tree-id1182 . -18) (undo-tree-id1183 . -19) (undo-tree-id1184 . -6) (undo-tree-id1185 . -7) (undo-tree-id1186 . -6) (undo-tree-id1187 . -7) (undo-tree-id1188 . -6) (undo-tree-id1189 . -7) (undo-tree-id1190 . -12) (undo-tree-id1191 . -13) (undo-tree-id1192 . -12) (undo-tree-id1193 . -13) (undo-tree-id1194 . -12) (undo-tree-id1195 . -13) (undo-tree-id1196 . -18) (undo-tree-id1197 . -19) (undo-tree-id1198 . -18) (undo-tree-id1199 . -19) (undo-tree-id1200 . -18) (undo-tree-id1201 . -19) (undo-tree-id1202 . -6) (undo-tree-id1203 . -7) (undo-tree-id1204 . -6) (undo-tree-id1205 . -7) (undo-tree-id1206 . -6) (undo-tree-id1207 . -7) (undo-tree-id1208 . -12) (undo-tree-id1209 . -13) (undo-tree-id1210 . -12) (undo-tree-id1211 . -13) (undo-tree-id1212 . -12) (undo-tree-id1213 . -13) (undo-tree-id1214 . -18) (undo-tree-id1215 . -19) (undo-tree-id1216 . -18) (undo-tree-id1217 . -19) (undo-tree-id1218 . -18) (undo-tree-id1219 . -19) (undo-tree-id1220 . -6) (undo-tree-id1221 . -7) (undo-tree-id1222 . -6) (undo-tree-id1223 . -7) (undo-tree-id1224 . -6) (undo-tree-id1225 . -7) (undo-tree-id1226 . -12) (undo-tree-id1227 . -13) (undo-tree-id1228 . -12) (undo-tree-id1229 . -13) (undo-tree-id1230 . -12) (undo-tree-id1231 . -13) (undo-tree-id1232 . -18) (undo-tree-id1233 . -19) (undo-tree-id1234 . -18) (undo-tree-id1235 . -19) (undo-tree-id1236 . -18) (undo-tree-id1237 . -19) (undo-tree-id1238 . -6) (undo-tree-id1239 . -7) (undo-tree-id1240 . -6) (undo-tree-id1241 . -7) (undo-tree-id1242 . -6) (undo-tree-id1243 . -7) (undo-tree-id1244 . -12) (undo-tree-id1245 . -13) (undo-tree-id1246 . -12) (undo-tree-id1247 . -13) (undo-tree-id1248 . -12) (undo-tree-id1249 . -13) (undo-tree-id1250 . -18) (undo-tree-id1251 . -19) (undo-tree-id1252 . -18) (undo-tree-id1253 . -19) (undo-tree-id1254 . -18) (undo-tree-id1255 . -19) (undo-tree-id1256 . -6) (undo-tree-id1257 . -7) (undo-tree-id1258 . -6) (undo-tree-id1259 . -7) (undo-tree-id1260 . -6) (undo-tree-id1261 . -7) (undo-tree-id1262 . -12) (undo-tree-id1263 . -13) (undo-tree-id1264 . -12) (undo-tree-id1265 . -13) (undo-tree-id1266 . -12) (undo-tree-id1267 . -13) (undo-tree-id1268 . -18) (undo-tree-id1269 . -19) (undo-tree-id1270 . -18) (undo-tree-id1271 . -19) (undo-tree-id1272 . -18) (undo-tree-id1273 . -19) (undo-tree-id1274 . -6) (undo-tree-id1275 . -7) (undo-tree-id1276 . -6) (undo-tree-id1277 . -7) (undo-tree-id1278 . -6) (undo-tree-id1279 . -7) (undo-tree-id1280 . -12) (undo-tree-id1281 . -13) (undo-tree-id1282 . -12) (undo-tree-id1283 . -13) (undo-tree-id1284 . -12) (undo-tree-id1285 . -13) (undo-tree-id1286 . -18) (undo-tree-id1287 . -19) (undo-tree-id1288 . -18) (undo-tree-id1289 . -19) (undo-tree-id1290 . -18) (undo-tree-id1291 . -19) (undo-tree-id1292 . -6) (undo-tree-id1293 . -7) (undo-tree-id1294 . -6) (undo-tree-id1295 . -7) (undo-tree-id1296 . -6) (undo-tree-id1297 . -7) (undo-tree-id1298 . -12) (undo-tree-id1299 . -13) (undo-tree-id1300 . -12) (undo-tree-id1301 . -13) (undo-tree-id1302 . -12) (undo-tree-id1303 . -13) (undo-tree-id1304 . -18) (undo-tree-id1305 . -19) (undo-tree-id1306 . -18) (undo-tree-id1307 . -19) (undo-tree-id1308 . -18) (undo-tree-id1309 . -19) (undo-tree-id1310 . -6) (undo-tree-id1311 . -7) (undo-tree-id1312 . -6) (undo-tree-id1313 . -7) (undo-tree-id1314 . -6) (undo-tree-id1315 . -7) (undo-tree-id1316 . -12) (undo-tree-id1317 . -13) (undo-tree-id1318 . -12) (undo-tree-id1319 . -13) (undo-tree-id1320 . -12) (undo-tree-id1321 . -13) (undo-tree-id1322 . -18) (undo-tree-id1323 . -19) (undo-tree-id1324 . -18) (undo-tree-id1325 . -19) (undo-tree-id1326 . -18) (undo-tree-id1327 . -19) (undo-tree-id1328 . -6) (undo-tree-id1329 . -7) (undo-tree-id1330 . -6) (undo-tree-id1331 . -7) (undo-tree-id1332 . -6) (undo-tree-id1333 . -7) (undo-tree-id1334 . -12) (undo-tree-id1335 . -13) (undo-tree-id1336 . -12) (undo-tree-id1337 . -13) (undo-tree-id1338 . -12) (undo-tree-id1339 . -13) (undo-tree-id1340 . -18) (undo-tree-id1341 . -19) (undo-tree-id1342 . -18) (undo-tree-id1343 . -19) (undo-tree-id1344 . -18) (undo-tree-id1345 . -19) (undo-tree-id1346 . -6) (undo-tree-id1347 . -7) (undo-tree-id1348 . -6) (undo-tree-id1349 . -7) (undo-tree-id1350 . -6) (undo-tree-id1351 . -7) (undo-tree-id1352 . -12) (undo-tree-id1353 . -13) (undo-tree-id1354 . -12) (undo-tree-id1355 . -13) (undo-tree-id1356 . -12) (undo-tree-id1357 . -13) (undo-tree-id1358 . -18) (undo-tree-id1359 . -19) (undo-tree-id1360 . -18) (undo-tree-id1361 . -19) (undo-tree-id1362 . -18) (undo-tree-id1363 . -19) (undo-tree-id1364 . -6) (undo-tree-id1365 . -7) (undo-tree-id1366 . -6) (undo-tree-id1367 . -7) (undo-tree-id1368 . -6) (undo-tree-id1369 . -7) (undo-tree-id1370 . -12) (undo-tree-id1371 . -13) (undo-tree-id1372 . -12) (undo-tree-id1373 . -13) (undo-tree-id1374 . -12) (undo-tree-id1375 . -13) (undo-tree-id1376 . -18) (undo-tree-id1377 . -19) (undo-tree-id1378 . -18) (undo-tree-id1379 . -19) (undo-tree-id1380 . -18) (undo-tree-id1381 . -19) (undo-tree-id1382 . -6) (undo-tree-id1383 . -7) (undo-tree-id1384 . -6) (undo-tree-id1385 . -7) (undo-tree-id1386 . -6) (undo-tree-id1387 . -7) (undo-tree-id1388 . -12) (undo-tree-id1389 . -13) (undo-tree-id1390 . -12) (undo-tree-id1391 . -13) (undo-tree-id1392 . -12) (undo-tree-id1393 . -13) (undo-tree-id1394 . -18) (undo-tree-id1395 . -19) (undo-tree-id1396 . -18) (undo-tree-id1397 . -19) (undo-tree-id1398 . -18) (undo-tree-id1399 . -19) (undo-tree-id1400 . -6) (undo-tree-id1401 . -7) (undo-tree-id1402 . -6) (undo-tree-id1403 . -7) (undo-tree-id1404 . -6) (undo-tree-id1405 . -7) (undo-tree-id1406 . -12) (undo-tree-id1407 . -13) (undo-tree-id1408 . -12) (undo-tree-id1409 . -13) (undo-tree-id1410 . -12) (undo-tree-id1411 . -13) (undo-tree-id1412 . -18) (undo-tree-id1413 . -19) (undo-tree-id1414 . -18) (undo-tree-id1415 . -19) (undo-tree-id1416 . -18) (undo-tree-id1417 . -19) (undo-tree-id1418 . -6) (undo-tree-id1419 . -7) (undo-tree-id1420 . -6) (undo-tree-id1421 . -7) (undo-tree-id1422 . -6) (undo-tree-id1423 . -7) (undo-tree-id1424 . -12) (undo-tree-id1425 . -13) (undo-tree-id1426 . -12) (undo-tree-id1427 . -13) (undo-tree-id1428 . -12) (undo-tree-id1429 . -13) (undo-tree-id1430 . -18) (undo-tree-id1431 . -19) (undo-tree-id1432 . -18) (undo-tree-id1433 . -19) (undo-tree-id1434 . -18) (undo-tree-id1435 . -19) (undo-tree-id1436 . -6) (undo-tree-id1437 . -7) (undo-tree-id1438 . -6) (undo-tree-id1439 . -7) (undo-tree-id1440 . -6) (undo-tree-id1441 . -7) (undo-tree-id1442 . -12) (undo-tree-id1443 . -13) (undo-tree-id1444 . -12) (undo-tree-id1445 . -13) (undo-tree-id1446 . -12) (undo-tree-id1447 . -13) (undo-tree-id1448 . -18) (undo-tree-id1449 . -19) (undo-tree-id1450 . -18) (undo-tree-id1451 . -19) (undo-tree-id1452 . -18) (undo-tree-id1453 . -19) (undo-tree-id1454 . -6) (undo-tree-id1455 . -7) (undo-tree-id1456 . -6) (undo-tree-id1457 . -7) (undo-tree-id1458 . -6) (undo-tree-id1459 . -7) (undo-tree-id1460 . -12) (undo-tree-id1461 . -13) (undo-tree-id1462 . -12) (undo-tree-id1463 . -13) (undo-tree-id1464 . -12) (undo-tree-id1465 . -13) (undo-tree-id1466 . -18) (undo-tree-id1467 . -19) (undo-tree-id1468 . -18) (undo-tree-id1469 . -19) (undo-tree-id1470 . -18) (undo-tree-id1471 . -19) (undo-tree-id1472 . -6) (undo-tree-id1473 . -7) (undo-tree-id1474 . -6) (undo-tree-id1475 . -7) (undo-tree-id1476 . -6) (undo-tree-id1477 . -7) (undo-tree-id1478 . -12) (undo-tree-id1479 . -13) (undo-tree-id1480 . -12) (undo-tree-id1481 . -13) (undo-tree-id1482 . -12) (undo-tree-id1483 . -13) (undo-tree-id1484 . -18) (undo-tree-id1485 . -19) (undo-tree-id1486 . -18) (undo-tree-id1487 . -19) (undo-tree-id1488 . -18) (undo-tree-id1489 . -19) (undo-tree-id1490 . 22) (undo-tree-id1491 . 17) (undo-tree-id1492 . 22) (undo-tree-id1493 . 16) (undo-tree-id1494 . 17) (undo-tree-id1495 . -5) (undo-tree-id1496 . -6) (undo-tree-id1497 . -5) (undo-tree-id1498 . -6) (undo-tree-id1499 . -5) (undo-tree-id1500 . -6) (undo-tree-id1501 . -5) (undo-tree-id1502 . -6) (undo-tree-id1503 . -5) (undo-tree-id1504 . -6) (undo-tree-id1505 . -5) (undo-tree-id1506 . -6) (undo-tree-id1507 . 17) (undo-tree-id1508 . 16) (undo-tree-id1509 . 18) (undo-tree-id1510 . 17) (undo-tree-id1511 . 19) (undo-tree-id1512 . 18) (undo-tree-id1513 . 20) (undo-tree-id1514 . 19) (undo-tree-id1515 . 21) (undo-tree-id1516 . 20) (undo-tree-id1517 . 22) (undo-tree-id1518 . 21) (undo-tree-id1519 . 22) (undo-tree-id1520 . 22)) nil (23221 12422 677241 501000) 0 nil]) ((9656 . 9665) (#("specular" 0 8 (fontified t face font-lock-string-face)) . 9656) (undo-tree-id1521 . -8) (undo-tree-id1522 . -8) (undo-tree-id1523 . 8)) nil (23221 12422 677310 872000) 0 nil]) ((9647 . 9655) (#("light" 0 5 (fontified t face font-lock-string-face)) . 9647) (undo-tree-id1524 . 5)) nil (23221 12422 677317 748000) 0 nil]) ((#("
" 0 1 (fontified t)) . 9623) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . 1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . 1)) nil (23221 12422 677338 672000) 0 nil]) ((#("  " 0 2 (fontified nil)) . -9628) (undo-tree-id1534 . -2) (undo-tree-id1535 . 2) (9624 . 9628) 9626) nil (23221 12422 677349 44000) 0 nil]) ((9624 . 9626)) nil (23221 12422 677352 888000) 0 nil]) ((#("    " 0 3 (fontified t) 3 4 (rear-nonsticky t fontified t)) . -9624) (undo-tree-id1536 . -4) (undo-tree-id1537 . -4) 9623 (#("
" 0 1 (fontified nil)) . -9689) (undo-tree-id1538 . -1) (9623 . 9690)) nil (23221 12422 677362 708000) 0 nil]) ((#("    " 0 4 (fontified t)) . -9623) (undo-tree-id1539 . -4) 9627 (9622 . 9627) 9621) nil (23221 12422 677370 930000) 0 nil]) ((9619 . 9622) (9601 . 9619) (#("/" 0 1 (fontified t)) . -9601) (undo-tree-id1540 . -1) (undo-tree-id1541 . 1) (undo-tree-id1542 . -1) 9602 (9601 . 9602) (9596 . 9601) (#("    " 0 4 (fontified t)) . 9596) (undo-tree-id1543 . -4) 9600 (9595 . 9600) 9591) nil (23221 12422 677386 711000) 0 nil]) ((9591 . 9592) (#("5" 0 1 (fontified t face highlight-numbers-number)) . 9591) (undo-tree-id1544 . 1)) nil (23221 12422 677394 365000) 0 nil]) ((9589 . 9590) (#("0" 0 1 (fontified t face highlight-numbers-number)) . 9589) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (undo-tree-id1587 . 1)) nil (23221 12422 677469 324000) 0 nil]) ((9585 . 9586) (#("5" 0 1 (fontified t face highlight-numbers-number)) . 9585) (undo-tree-id1588 . 1)) nil (23221 12422 677480 70000) 0 nil]) ((9583 . 9584) (#("0" 0 1 (fontified t face highlight-numbers-number)) . 9583) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . 1) (undo-tree-id1626 . 1) (undo-tree-id1627 . 1)) nil (23221 12422 677550 680000) 0 nil]) ((9579 . 9580) (#("5" 0 1 (fontified t face highlight-numbers-number)) . 9579) (undo-tree-id1628 . 1)) nil (23221 12422 677557 426000) 0 nil]) ((9577 . 9578) (#("0" 0 1 (fontified t face highlight-numbers-number)) . 9577) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . 1)) nil (23221 12422 677593 42000) 0 nil]) ((9560 . 9568) (#("diffuse" 0 7 (fontified t face font-lock-string-face)) . 9560) (undo-tree-id1660 . -7) (undo-tree-id1661 . 7)) nil (23221 12422 677600 653000) 0 nil]) ((#("
" 0 1 (fontified nil)) . -9594) (undo-tree-id1662 . -1) (9529 . 9595) 9525) nil (23221 12422 677605 235000) 0 nil]) ((9525 . 9526) (#("2" 0 1 (fontified t face highlight-numbers-number)) . 9525) (undo-tree-id1663 . 1)) nil (23221 12422 677609 211000) 0 nil]) ((9519 . 9520) (#("2" 0 1 (fontified t face highlight-numbers-number)) . 9519) (undo-tree-id1664 . 1)) nil (23221 12422 677613 131000) 0 nil]) ((9513 . 9514) (#("2" 0 1 (fontified t face highlight-numbers-number)) . 9513) (undo-tree-id1665 . 1)) nil (23221 12422 677616 948000) 0 nil]) ((9498 . 9502) (#("f" 0 1 (fontified t face font-lock-string-face)) . -9498) (undo-tree-id1666 . -1) (9497 . 9499) (#("f" 0 1 (fontified t face font-lock-string-face)) . -9497) (undo-tree-id1667 . -1) (9495 . 9498) (#("ambient" 0 7 (fontified t face font-lock-string-face)) . 9495) (undo-tree-id1668 . -7) (undo-tree-id1669 . 7)) nil (23221 12422 677626 450000) 0 nil]) ((nil rear-nonsticky nil 9468 . 9469) (#("
" 0 1 (fontified nil)) . -9529) (undo-tree-id1670 . -1) (9464 . 9530) 9400 (t 23221 12343 808572 801000)) nil (23221 12422 677632 558000) 0 nil]) ((9943 . 9945)) nil (23221 12343 740881 739000) 0 nil]) ((9876 . 9878) 9885) nil (23221 12343 740886 447000) 0 nil]) ((9461 . 9462) (#("f" 0 1 (fontified t face highlight-numbers-number)) . -9461) (undo-tree-id880 . -1) (9460 . 9462) (#("f" 0 1 (fontified t)) . -9460) (undo-tree-id881 . -1) 9461 (9460 . 9461) (#("f" 0 1 (fontified t)) . -9460) (undo-tree-id882 . -1) (9455 . 9461) (#("f" 0 1 (fontified t face highlight-numbers-number)) . -9455) (undo-tree-id883 . -1) (9449 . 9456) (#("f" 0 1 (fontified t face highlight-numbers-number)) . -9449) (undo-tree-id884 . -1) (9446 . 9450) (9445 . 9447) (#("(" 0 1 (fontified nil)) . -9445) (9444 . 9446) (#("f" 0 1 (fontified t)) . -9444) (undo-tree-id885 . -1) (9440 . 9445) (#("c" 0 1 (fontified t)) . -9440) (undo-tree-id886 . -1) 9441 (9440 . 9441) (#("objectColor" 0 11 (fontified t)) . 9440) (undo-tree-id887 . 3)) nil (23221 12343 740914 944000) 0 nil]) ((9427 . 9437) (#("t" 0 1 (fontified t face font-lock-string-face)) . -9427) (undo-tree-id888 . -1) 9428 (9424 . 9428) (#("objectColor" 0 11 (fontified t face font-lock-string-face)) . 9424)) nil (23221 12343 740924 613000) 0 nil]) ((#("# " 0 1 (syntax-table #1# fontified t face font-lock-comment-delimiter-face) 1 2 (fontified t face font-lock-comment-delimiter-face)) . -9404) 9400) nil (23221 12343 740927 575000) 0 nil]) ((#("    " 0 4 (fontified t)) . -9399) (undo-tree-id889 . -4) 9403 (9398 . 9403) (t 23221 12269 177979 87000) 9355) nil (23221 12343 740932 392000) 0 nil]) ((#("# " 0 1 (fontified t syntax-table #1# face font-lock-comment-delimiter-face) 1 2 (fontified t face font-lock-comment-delimiter-face)) . -9355) (undo-tree-id861 . 2)) nil (23221 12269 126830 654000) 0 nil]) ((nil rear-nonsticky nil 9354 . 9355) (#("
" 0 1 (face font-lock-comment-face fontified nil)) . -9400) (undo-tree-id862 . -1) (9350 . 9401) 9281) nil (23221 12269 126841 233000) 0 nil]) ((#("    # lightingShader.set(\"viewPos\", cam.position)
" 0 4 (fontified t) 4 5 (syntax-table #1# fontified t face font-lock-comment-delimiter-face) 5 6 (fontified t face font-lock-comment-delimiter-face) 6 10 (fontified t face font-lock-comment-face) 10 21 (fontified t face font-lock-comment-face) 21 24 (fontified t face font-lock-comment-face) 24 25 (fontified t face font-lock-comment-face) 25 26 (fontified t face font-lock-comment-face) 26 32 (fontified t face font-lock-comment-face) 32 33 (fontified t face font-lock-comment-face) 33 34 (fontified t face font-lock-comment-face) 34 48 (fontified t face font-lock-comment-face) 48 49 (fontified t face font-lock-comment-face) 49 50 (fontified t face font-lock-comment-face)) . 9500) (undo-tree-id863 . 44) (undo-tree-id864 . -20) (undo-tree-id865 . -24) (undo-tree-id866 . -50) (undo-tree-id867 . 2) (undo-tree-id868 . 2) (undo-tree-id869 . 2) (undo-tree-id870 . 2) (undo-tree-id871 . 26) (undo-tree-id872 . -25) (undo-tree-id873 . -26) (undo-tree-id874 . -25) (undo-tree-id875 . -26) (undo-tree-id876 . 26) (undo-tree-id877 . -25) (undo-tree-id878 . 2) (undo-tree-id879 . -49) 9524) nil (23221 12269 126877 166000) 0 nil]) ((9225 . 9227) (9173 . 9175) (9122 . 9124) (9086 . 9088) (9041 . 9043) (8994 . 8996) (8984 . 8986) 9241) nil (23221 12269 126887 547000) 0 nil] [nil ([nil ([nil ([nil ([nil ([nil nil ((9377 . 9387) (#("-" 0 1 (fontified t)) . -9377) (undo-tree-id759 . -1) 9378 (9372 . 9378) (#("v" 0 1 (fontified t)) . -9372) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (#("a" 0 1 (fontified t)) . -9373) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (#("r" 0 1 (fontified t face font-lock-keyword-face)) . -9374) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (#(" " 0 1 (fontified t)) . -9375) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) 9376 (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . 9376) (undo-tree-id772 . 1) (undo-tree-id773 . 1)) ((9372 . 9377) (#("light-" 0 5 (fontified nil) 5 6 (fontified nil)) . 9372) (undo-tree-id783 . -5) (undo-tree-id784 . -5) (undo-tree-id785 . -5) (undo-tree-id786 . -6) (undo-tree-id787 . -5) (undo-tree-id788 . -6) (9377 . 9378) (#("_direction" 0 10 (fontified t)) . 9377) (undo-tree-id789 . -1) (undo-tree-id790 . 9) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . 9) (undo-tree-id795 . 9) (undo-tree-id796 . 9) (undo-tree-id797 . 9)) (23221 12224 903403 222000) 0 nil]) ((#("vec3f(-0.2f, -1.0f, -0.3f" 0 5 (fontified t face font-lock-variable-name-face) 5 6 (fontified t face (rainbow-delimiters-depth-2-face)) 6 7 (fontified t) 7 8 (fontified t face highlight-numbers-number) 8 9 (fontified t) 9 11 (fontified t face highlight-numbers-number) 11 14 (fontified t) 14 15 (fontified t face highlight-numbers-number) 15 16 (fontified t) 16 18 (fontified t face highlight-numbers-number) 18 21 (fontified t) 21 22 (fontified t face highlight-numbers-number) 22 23 (fontified t) 23 25 (fontified t face highlight-numbers-number)) . 9376) (undo-tree-id774 . 15) (undo-tree-id775 . 14) (undo-tree-id776 . -10) (undo-tree-id777 . -10)) ((9376 . 9401)) (23221 12224 903904 514000) 0 nil]) ((9036 . 9037) (#("f" 0 1 (fontified t face highlight-numbers-number)) . -9036) (undo-tree-id778 . -1) (9029 . 9037) (#("f" 0 1 (fontified t face highlight-numbers-number)) . -9029) (undo-tree-id779 . -1) (9022 . 9030) (#("f" 0 1 (fontified t face highlight-numbers-number)) . -9022) (undo-tree-id780 . -1) (9018 . 9023) (9017 . 9019) (#("(" 0 1 (fontified nil)) . -9017) (9016 . 9018) (#("f" 0 1 (fontified t)) . -9016) (undo-tree-id781 . -1) (9014 . 9017) (#("r" 0 1 (fontified t)) . -9014) (undo-tree-id782 . -1) 9015 (8994 . 9015) (8987 . 8994) 8986) ((#("
      " 0 1 (fontified t) 1 7 (fontified nil)) . 8987) (undo-tree-id798 . -7) (undo-tree-id799 . -7) (undo-tree-id800 . -7) (undo-tree-id801 . -7) (undo-tree-id802 . -7) (undo-tree-id803 . -7) (undo-tree-id804 . -7) (undo-tree-id805 . -7) (undo-tree-id806 . -7) (undo-tree-id807 . -7) (undo-tree-id808 . -7) (undo-tree-id809 . -7) (#("light_direction = ver" 0 20 (fontified nil) 20 21 (fontified nil)) . 8994) (undo-tree-id810 . -20) (undo-tree-id811 . -20) (undo-tree-id812 . -20) (undo-tree-id813 . -20) (undo-tree-id814 . -20) (undo-tree-id815 . -20) (undo-tree-id816 . -20) (undo-tree-id817 . -20) (undo-tree-id818 . -20) (undo-tree-id819 . -20) (undo-tree-id820 . -20) (undo-tree-id821 . -21) (9014 . 9015) (#("c3f" 0 2 (fontified nil) 2 3 (fontified nil)) . 9014) (undo-tree-id822 . -2) (undo-tree-id823 . -2) (undo-tree-id824 . -2) (undo-tree-id825 . -2) (undo-tree-id826 . -2) (undo-tree-id827 . -2) (undo-tree-id828 . -2) (undo-tree-id829 . -2) (undo-tree-id830 . -2) (undo-tree-id831 . -3) (9016 . 9017) (#("f(" 0 1 (fontified nil) 1 2 (fontified nil)) . 9016) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -2) (9017 . 9018) (#("()" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face)) 1 2 (fontified nil face (rainbow-delimiters-depth-1-face))) . 9017) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (#("-0.2f" 0 1 (fontified nil) 1 2 (fontified nil face highlight-numbers-number) 2 3 (fontified nil) 3 4 (fontified nil face highlight-numbers-number) 4 5 (fontified nil face highlight-numbers-number)) . 9018) (undo-tree-id846 . -4) (undo-tree-id847 . -4) (undo-tree-id848 . -4) (undo-tree-id849 . -4) (undo-tree-id850 . -4) (undo-tree-id851 . -5) (9022 . 9023) (#("f, -1.0f" 0 1 (fontified nil face highlight-numbers-number) 1 4 (fontified nil) 4 5 (fontified nil face highlight-numbers-number) 5 6 (fontified nil) 6 7 (fontified nil face highlight-numbers-number) 7 8 (fontified nil face highlight-numbers-number)) . 9022) (undo-tree-id852 . -7) (undo-tree-id853 . -7) (undo-tree-id854 . -7) (undo-tree-id855 . -8) (9029 . 9030) (#("f, -0.3f" 0 1 (fontified nil face highlight-numbers-number) 1 4 (fontified nil) 4 5 (fontified nil face highlight-numbers-number) 5 6 (fontified nil) 6 7 (fontified nil face highlight-numbers-number) 7 8 (fontified nil face highlight-numbers-number)) . 9029) (undo-tree-id856 . -7) (undo-tree-id857 . -8) (9036 . 9037) (#("f" 0 1 (fontified t face highlight-numbers-number)) . 9036)) (23221 12229 160610 161000) 0 nil]) ((9173 . 9175) (9122 . 9124) (9086 . 9088) (9041 . 9043) (8994 . 8996) 9165 (t 23221 11808 62529 966000)) ((#("# " 0 1 (syntax-table #1# fontified t face font-lock-comment-delimiter-face) 1 2 (fontified t face font-lock-comment-delimiter-face)) . 8994) (#("# " 0 1 (syntax-table #1# fontified t face font-lock-comment-delimiter-face) 1 2 (fontified t face font-lock-comment-delimiter-face)) . 9041) (#("# " 0 1 (syntax-table #1# fontified t face font-lock-comment-delimiter-face) 1 2 (fontified t face font-lock-comment-delimiter-face)) . 9086) (#("# " 0 1 (syntax-table #1# fontified t face font-lock-comment-delimiter-face) 1 2 (fontified t face font-lock-comment-delimiter-face)) . 9122) (#("# " 0 1 (syntax-table #1# fontified t face font-lock-comment-delimiter-face) 1 2 (fontified t face font-lock-comment-delimiter-face)) . 9173)) (23221 12229 162038 354000) 0 nil]) ((9213 . 9215) 9230 (t 23221 11804 623783 692000)) ((#("# " 0 1 (fontified t face font-lock-comment-delimiter-face syntax-table #1#) 1 2 (fontified t face font-lock-comment-delimiter-face)) . 9213) (undo-tree-id858 . 2) (undo-tree-id859 . 2) (t 23221 11808 62529 966000)) (23221 12229 163077 622000) 0 nil]) ((9309 . 9313) (t 23221 11767 418531 15000)) ((#("var " 0 1 (fontified nil face font-lock-keyword-face) 1 2 (fontified nil face font-lock-keyword-face) 2 3 (fontified nil face font-lock-keyword-face) 3 4 (fontified nil)) . 9309) (undo-tree-id860 . -4)) (23221 12229 165547 224000) 0 nil]) ((9333 . 9334) (#("f" 0 1 (fontified t face highlight-numbers-number)) . -9333) (undo-tree-id742 . -1) (9326 . 9334) (#("f" 0 1 (fontified t face highlight-numbers-number)) . -9326) (undo-tree-id743 . -1) (9322 . 9327) (9319 . 9322) (#("f" 0 1 (fontified t face highlight-numbers-number)) . -9319) (undo-tree-id744 . -1) (9315 . 9320) (9314 . 9316) (#("(" 0 1 (fontified nil)) . -9314) (9313 . 9315) (#("f" 0 1 (fontified t)) . -9313) (undo-tree-id745 . -1) (9311 . 9314) (#("r" 0 1 (fontified t)) . -9311) (undo-tree-id746 . -1) 9312 (9309 . 9312)) nil (23221 12229 168952 414000) 0 nil]) ((9307 . 9309)) nil (23221 11767 379543 289000) 0 nil]) ((9291 . 9306) (9290 . 9292) (#("\"" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face) syntax-table #2#)) . -9290) (9290 . 9291) (#("l" 0 1 (fontified t)) . -9290) (undo-tree-id747 . -1) (#("\"" 0 1 (fontified nil syntax-table #2# face font-lock-string-face)) . -9291) (undo-tree-id748 . -1) (#("\"" 0 1 (fontified t syntax-table #2# face font-lock-string-face)) . 9292) (9291 . 9293) (#("\"" 0 1 (fontified nil syntax-table #2#)) . -9291) (9291 . 9292) (#("i" 0 1 (fontified t)) . -9291) (undo-tree-id749 . -1) (#("g" 0 1 (fontified t)) . -9292) (undo-tree-id750 . -1) (#("h" 0 1 (fontified nil)) . -9293) (undo-tree-id751 . -1) (#("t" 0 1 (fontified t)) . -9294) (undo-tree-id752 . -1) 9295 (9290 . 9295) (9289 . 9291) (#("(" 0 1 (fontified nil face font-lock-type-face)) . -9289) (9287 . 9290) (9285 . 9287) (9271 . 9285) (#("light" 0 5 (fontified t)) . -9271) (undo-tree-id753 . -5) 9276 (9274 . 9276) (#("h" 0 1 (fontified nil)) . -9274) (undo-tree-id754 . -1) (#("h" 0 1 (fontified nil)) . -9275) (undo-tree-id755 . -1) (#("t" 0 1 (fontified t)) . -9276) (undo-tree-id756 . -1) 9277 (9271 . 9277) (#("g" 0 1 (fontified t)) . -9271) (undo-tree-id757 . -1) (#("i" 0 1 (fontified t)) . -9272) (undo-tree-id758 . -1) 9273 (9271 . 9273) (9266 . 9271) 9246) nil (23221 11767 379589 783000) 0 nil]) ((9561 . 9563) (9522 . 9524) (9471 . 9473) (9420 . 9422) (9374 . 9376) (9324 . 9326) (9271 . 9273) 9567 (t 23221 11584 922073 245000)) nil (23221 11767 379606 826000) 0 nil] [nil ([nil ([nil ([nil ([nil ([nil nil ((9736 . 9738) (9695 . 9697) (9661 . 9663) (9623 . 9625) (9556 . 9558) (9520 . 9522) (9473 . 9475) (9450 . 9452) (9409 . 9411) (9376 . 9378) (9326 . 9328) (9287 . 9289) (9236 . 9238) 9734) ((#("# " 0 1 (fontified t syntax-table #1# face font-lock-comment-delimiter-face) 1 2 (fontified t face font-lock-comment-delimiter-face)) . 9236) (undo-tree-id704 . 2) (undo-tree-id705 . 2) (#("# " 0 1 (syntax-table #1# fontified t face font-lock-comment-delimiter-face) 1 2 (fontified t face font-lock-comment-delimiter-face)) . 9287) (undo-tree-id706 . 2) (undo-tree-id707 . 2) (#("# " 0 1 (syntax-table #1# fontified t face font-lock-comment-delimiter-face) 1 2 (fontified t face font-lock-comment-delimiter-face)) . 9326) (undo-tree-id708 . 2) (undo-tree-id709 . 2) (#("# " 0 1 (syntax-table #1# fontified t face font-lock-comment-delimiter-face) 1 2 (fontified t face font-lock-comment-delimiter-face)) . 9376) (undo-tree-id710 . 2) (undo-tree-id711 . 2) (#("# " 0 1 (syntax-table #1# fontified t face font-lock-comment-delimiter-face) 1 2 (fontified t face font-lock-comment-delimiter-face)) . 9409) (undo-tree-id712 . 2) (undo-tree-id713 . 2) (#("# " 0 1 (syntax-table #1# fontified t face font-lock-comment-delimiter-face) 1 2 (fontified t face font-lock-comment-delimiter-face)) . 9450) (undo-tree-id714 . 2) (undo-tree-id715 . 2) (#("# " 0 1 (syntax-table #1# fontified t face font-lock-comment-delimiter-face) 1 2 (fontified t face font-lock-comment-delimiter-face)) . 9473) (undo-tree-id716 . 2) (undo-tree-id717 . 2) (#("# " 0 1 (syntax-table #1# fontified t face font-lock-comment-delimiter-face) 1 2 (fontified t face font-lock-comment-delimiter-face)) . 9520) (undo-tree-id718 . 2) (undo-tree-id719 . 2) (#("# " 0 1 (syntax-table #1# fontified t face font-lock-comment-delimiter-face) 1 2 (fontified t face font-lock-comment-delimiter-face)) . 9556) (undo-tree-id720 . 2) (undo-tree-id721 . 2) (#("# " 0 1 (syntax-table #1# fontified t face font-lock-comment-delimiter-face) 1 2 (fontified t face font-lock-comment-delimiter-face)) . 9623) (undo-tree-id722 . 2) (undo-tree-id723 . 2) (#("# " 0 1 (syntax-table #1# fontified t face font-lock-comment-delimiter-face) 1 2 (fontified t face font-lock-comment-delimiter-face)) . 9661) (undo-tree-id724 . 2) (undo-tree-id725 . 2) (#("# " 0 1 (syntax-table #1# fontified t face font-lock-comment-delimiter-face) 1 2 (fontified t face font-lock-comment-delimiter-face)) . 9695) (undo-tree-id726 . 2) (undo-tree-id727 . 2) (#("# " 0 1 (syntax-table #1# fontified t face font-lock-comment-delimiter-face) 1 2 (fontified t face font-lock-comment-delimiter-face)) . 9736) (undo-tree-id728 . 2) (undo-tree-id729 . 2) (undo-tree-id730 . 2)) (23221 11633 913008 824000) 0 nil]) ((#("
" 0 1 (fontified t)) . 9232) (undo-tree-id581 . -1) (undo-tree-id582 . 1) (undo-tree-id583 . 1) (undo-tree-id584 . 1) (undo-tree-id585 . 1) (undo-tree-id586 . 1) (undo-tree-id587 . 1) (undo-tree-id588 . 1) (undo-tree-id589 . 1) (undo-tree-id590 . 1) (undo-tree-id591 . 1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . 1) (undo-tree-id599 . 1) (undo-tree-id600 . 1) (undo-tree-id601 . 1) (undo-tree-id602 . 1) (undo-tree-id603 . 1) (undo-tree-id604 . 1) (undo-tree-id605 . 1) (undo-tree-id606 . -1) (undo-tree-id607 . 1) (undo-tree-id608 . 1) (undo-tree-id609 . 1) (undo-tree-id610 . 1) (undo-tree-id611 . 1)) ((9232 . 9233)) (23221 11633 914279 315000) 0 nil]) ((#("    lampPos = vec3f(x, 0.0f, y)
" 0 19 (fontified t) 19 20 (fontified t face (rainbow-delimiters-depth-1-face)) 20 23 (fontified t) 23 24 (fontified t face highlight-numbers-number) 24 25 (fontified t) 25 27 (fontified t face highlight-numbers-number) 27 30 (fontified t) 30 31 (fontified t face (rainbow-delimiters-depth-1-face)) 31 32 (fontified t)) . 9232) (undo-tree-id612 . 32) (undo-tree-id613 . 32) (undo-tree-id614 . 32) (undo-tree-id615 . -11) (undo-tree-id616 . -11) (undo-tree-id617 . -31) (undo-tree-id618 . -31) (undo-tree-id619 . -17) (undo-tree-id620 . -32) (undo-tree-id621 . -4) (undo-tree-id622 . 28) (undo-tree-id623 . 28) (undo-tree-id624 . 30) (undo-tree-id625 . 30) (undo-tree-id626 . -23) (undo-tree-id627 . -24) (undo-tree-id628 . -23) (undo-tree-id629 . -24) (undo-tree-id630 . -23) (undo-tree-id631 . -24) (undo-tree-id632 . 28) (undo-tree-id633 . -4) (undo-tree-id634 . -11) (undo-tree-id635 . -4) (undo-tree-id636 . -11) 9236) ((9232 . 9264)) (23221 11634 257058 368000) 0 nil]) ((#("    lightingShader.set(\"objectColor\", objectColor)
    lightingShader.set(\"lightColor\", lampColor)
    lightingShader.set(\"lightPos\", lampPos)
    lightingShader.set(\"viewPos\", cam.position)

" 0 19 (fontified t) 19 22 (fontified t face font-lock-type-face) 22 23 (fontified t face (rainbow-delimiters-depth-1-face)) 23 24 (syntax-table #2# fontified t face font-lock-string-face) 24 35 (fontified t face font-lock-string-face) 35 36 (syntax-table #2# fontified t face font-lock-string-face) 36 49 (fontified t) 49 50 (fontified t face (rainbow-delimiters-depth-1-face)) 50 51 (fontified t) 51 70 (fontified t) 70 73 (fontified t face font-lock-type-face) 73 74 (fontified t face (rainbow-delimiters-depth-1-face)) 74 75 (syntax-table #2# fontified t face font-lock-string-face) 75 85 (fontified t face font-lock-string-face) 85 86 (syntax-table #2# fontified t face font-lock-string-face) 86 97 (fontified t) 97 98 (fontified t face (rainbow-delimiters-depth-1-face)) 98 99 (fontified t) 99 118 (fontified t) 118 121 (fontified t face font-lock-type-face) 121 122 (fontified t face (rainbow-delimiters-depth-1-face)) 122 123 (syntax-table #2# fontified t face font-lock-string-face) 123 131 (fontified t face font-lock-string-face) 131 132 (syntax-table #2# fontified t face font-lock-string-face) 132 141 (fontified t) 141 142 (fontified t face (rainbow-delimiters-depth-1-face)) 142 143 (fontified t) 143 151 (fontified t) 151 162 (fontified t) 162 165 (fontified t face font-lock-type-face) 165 166 (fontified t face (rainbow-delimiters-depth-1-face)) 166 167 (syntax-table #2# fontified t face font-lock-string-face) 167 174 (fontified t face font-lock-string-face) 174 175 (syntax-table #2# fontified t face font-lock-string-face) 175 189 (fontified t) 189 190 (fontified t face (rainbow-delimiters-depth-1-face)) 190 192 (fontified t)) . 9265) (undo-tree-id637 . -191) (undo-tree-id638 . 192) (undo-tree-id639 . -2) (undo-tree-id640 . -191) (undo-tree-id641 . -191) (undo-tree-id642 . -192) (undo-tree-id643 . -191) (undo-tree-id644 . 192) (undo-tree-id645 . 188) (undo-tree-id646 . 192) (undo-tree-id647 . 188) (undo-tree-id648 . 188) (undo-tree-id649 . 137) (undo-tree-id650 . 188) (undo-tree-id651 . 89) (undo-tree-id652 . 137) (undo-tree-id653 . 45) (undo-tree-id654 . 89) (undo-tree-id655 . 45) (undo-tree-id656 . 45) (undo-tree-id657 . 89) (undo-tree-id658 . 45) (undo-tree-id659 . 137) (undo-tree-id660 . 89) (undo-tree-id661 . 188) (undo-tree-id662 . 137) (undo-tree-id663 . 192) (undo-tree-id664 . 188) (undo-tree-id665 . 192) (undo-tree-id666 . 192) (undo-tree-id667 . -50) (undo-tree-id668 . 188) (undo-tree-id669 . 192) (undo-tree-id670 . 188) (undo-tree-id671 . -88) (undo-tree-id672 . -97) (undo-tree-id673 . 190) (undo-tree-id674 . -192) (undo-tree-id675 . 190) (undo-tree-id676 . 190) (undo-tree-id677 . -2) (undo-tree-id678 . -191) (undo-tree-id679 . 139) (undo-tree-id680 . 190) (undo-tree-id681 . 91) (undo-tree-id682 . 139) (undo-tree-id683 . 47) (undo-tree-id684 . 91) (undo-tree-id685 . 1) (undo-tree-id686 . 47) 9456) ((9265 . 9457)) (23221 11634 729466 221000) 0 nil]) ((#("  " 0 1 (fontified t) 1 2 (fontified t rear-nonsticky t)) . -8518) (undo-tree-id687 . -2) (undo-tree-id688 . -2) 8515 (nil rear-nonsticky nil 8519 . 8520) (#("
" 0 1 (fontified nil)) . -8540) (undo-tree-id689 . -1) (8515 . 8541)) ((#("
    lightingShader.use()
" 0 1 (fontified t) 1 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil rear-nonsticky nil) 5 23 (fontified nil) 23 24 (fontified nil face (rainbow-delimiters-depth-1-face)) 24 25 (fontified nil face (rainbow-delimiters-depth-1-face)) 25 26 (fontified nil)) . 8515) (undo-tree-id731 . -1) (undo-tree-id732 . -25) (undo-tree-id733 . 21) (undo-tree-id734 . 26) (undo-tree-id735 . 21) (undo-tree-id736 . 21) (undo-tree-id737 . 21) (undo-tree-id738 . -3) (undo-tree-id739 . -5) (undo-tree-id740 . -25) (undo-tree-id741 . -26) (8540 . 8541) (nil rear-nonsticky t 8519 . 8520) (8518 . 8520)) (23221 11635 49254 647000) 0 nil]) ((#("    lightingShader.use()
" 0 22 (fontified t) 22 23 (fontified t face (rainbow-delimiters-depth-1-face)) 23 24 (fontified t face (rainbow-delimiters-depth-1-face)) 24 25 (fontified t)) . 9242) (undo-tree-id690 . -4) (undo-tree-id691 . 21) (undo-tree-id692 . -4) (undo-tree-id693 . -4) (undo-tree-id694 . -25) (undo-tree-id695 . -4) (undo-tree-id696 . 21) (undo-tree-id697 . 21) (undo-tree-id698 . 21) (undo-tree-id699 . -25) (undo-tree-id700 . 21) (undo-tree-id701 . 21) (undo-tree-id702 . -4) (undo-tree-id703 . -4) 9246 (t 23221 11584 922073 245000)) ((9242 . 9267)) (23221 11635 401244 525000) 0 nil]) ((8577 . 8580) (#("use" 0 3 (fontified t)) . 8577) (undo-tree-id505 . 3) (undo-tree-id506 . 3) (undo-tree-id507 . -3) (undo-tree-id508 . 1) (undo-tree-id509 . 2) (undo-tree-id510 . 1) (undo-tree-id511 . 3) (undo-tree-id512 . 2)) nil (23221 11636 953038 604000) 0 nil]) ((8533 . 8536) (#("use" 0 3 (fontified t)) . 8533) (undo-tree-id513 . 3) (undo-tree-id514 . 2) (undo-tree-id515 . 1) (undo-tree-id516 . -3) (undo-tree-id517 . -3) (undo-tree-id518 . -3) (undo-tree-id519 . -3) (undo-tree-id520 . -3) (undo-tree-id521 . -3) (undo-tree-id522 . -3) (undo-tree-id523 . -3) (undo-tree-id524 . -3) (undo-tree-id525 . -3) (undo-tree-id526 . -3) (undo-tree-id527 . -3) (undo-tree-id528 . -3) (undo-tree-id529 . -3) (undo-tree-id530 . 3)) nil (23221 11584 889442 451000) 0 nil]) ((#("    " 0 4 (fontified t)) . -8515) (undo-tree-id531 . -4) 8519 (8514 . 8519) 8503) nil (23221 11584 889452 636000) 0 nil]) ((8601 . 8602) (#("0" 0 1 (fontified t face highlight-numbers-number)) . 8601) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . 1)) nil (23221 11584 889508 249000) 0 nil]) ((8590 . 8598) (#("diffuse" 0 7 (fontified t face font-lock-string-face)) . 8590) (undo-tree-id563 . -7) (undo-tree-id564 . 7)) nil (23221 11584 889519 854000) 0 nil]) ((nil rear-nonsticky nil 8560 . 8561) (#("
" 0 1 (fontified nil)) . -8602) (undo-tree-id565 . -1) (8558 . 8603) 8556) nil (23221 11584 889528 207000) 0 nil]) ((8554 . 8557)) nil (23221 11584 889532 53000) 0 nil]) ((8549 . 8553) (#("f" 0 1 (fontified t face font-lock-string-face)) . -8549) (undo-tree-id566 . -1) (8548 . 8550) (#("f" 0 1 (fontified t face font-lock-string-face)) . -8548) (undo-tree-id567 . -1) (8540 . 8549) (8537 . 8540) (8536 . 8538) (#("\"" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face) syntax-table #2#)) . -8536) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (8536 . 8537) (8535 . 8537) (#("(" 0 1 (fontified nil)) . -8535) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (8531 . 8536) (8517 . 8531) (#("light" 0 5 (fontified t)) . -8517) (undo-tree-id572 . -5) (undo-tree-id573 . 5) (undo-tree-id574 . 4) (undo-tree-id575 . 3) (undo-tree-id576 . 2) (undo-tree-id577 . 1) (undo-tree-id578 . -5) 8522 (8517 . 8522) (#(" " 0 1 (fontified t)) . -8517) (undo-tree-id579 . -1) (#(" " 0 1 (fontified t)) . -8518) (undo-tree-id580 . -1) 8519 (8514 . 8519) (t 23221 11468 117812 912000) 8483) nil (23221 11584 889572 356000) 0 nil]) ((8446 . 8454) (#("t" 0 1 (fontified t face font-lock-string-face)) . -8446) (undo-tree-id481 . -1) (#("c" 0 1 (fontified t face font-lock-string-face)) . -8447) (undo-tree-id482 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -8448) (undo-tree-id483 . -1) 8449 (8444 . 8449) (#("h" 0 1 (fontified t face font-lock-string-face)) . -8444) (undo-tree-id484 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -8445) (undo-tree-id485 . -1) 8446 (8444 . 8446) (#("h" 0 1 (fontified t face font-lock-string-face)) . -8444) (undo-tree-id486 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -8445) (undo-tree-id487 . -1) 8446 (8442 . 8446) (#("colors" 0 6 (fontified t face font-lock-string-face)) . 8442)) nil (23221 11468 97903 120000) 0 nil]) ((8421 . 8433) (#("colors" 0 6 (fontified t face font-lock-string-face)) . 8421)) nil (23221 11468 97913 940000) 0 nil]) ((#("    lampColor = vec3f(1.0f)
    lampPos = vec3f(1.2f, 0.0f, 2.0f)
" 0 21 (fontified t) 21 22 (fontified t face (rainbow-delimiters-depth-1-face)) 22 23 (fontified t face highlight-numbers-number) 23 24 (fontified t) 24 26 (fontified t face highlight-numbers-number) 26 27 (fontified t face (rainbow-delimiters-depth-1-face)) 27 47 (fontified t) 47 48 (fontified t face (rainbow-delimiters-depth-1-face)) 48 49 (fontified t face highlight-numbers-number) 49 50 (fontified t) 50 52 (fontified t face highlight-numbers-number) 52 54 (fontified t) 54 55 (fontified t face highlight-numbers-number) 55 56 (fontified t) 56 58 (fontified t face highlight-numbers-number) 58 60 (fontified t) 60 61 (fontified t face highlight-numbers-number) 61 62 (fontified t) 62 64 (fontified t face highlight-numbers-number) 64 65 (fontified t face (rainbow-delimiters-depth-1-face)) 65 66 (fontified t)) . 8503) (undo-tree-id488 . -49) (undo-tree-id489 . -66) (undo-tree-id490 . -66) (undo-tree-id491 . -66) (undo-tree-id492 . -66) (undo-tree-id493 . -66) (undo-tree-id494 . -49) (undo-tree-id495 . -28) (undo-tree-id496 . -66) (undo-tree-id497 . -21) (undo-tree-id498 . -49) (undo-tree-id499 . -21) (undo-tree-id500 . -49) (undo-tree-id501 . 19) (undo-tree-id502 . -48) (undo-tree-id503 . 2) (undo-tree-id504 . -65) 8552) nil (23221 11468 97948 305000) 0 nil] [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil nil ((#("    lightShader.use()
" 0 19 (fontified t) 19 20 (fontified t face (rainbow-delimiters-depth-1-face)) 20 21 (fontified t face (rainbow-delimiters-depth-1-face)) 21 22 (fontified t)) . 9206) (undo-tree-id190 . -22) (undo-tree-id191 . 1) (undo-tree-id192 . 1) (undo-tree-id193 . 1) (undo-tree-id194 . 1) (undo-tree-id195 . 1) (undo-tree-id196 . 1) (undo-tree-id197 . 1) (undo-tree-id198 . -20) (undo-tree-id199 . 1) (undo-tree-id200 . 1) (undo-tree-id201 . 1) (undo-tree-id202 . 1) (undo-tree-id203 . 1) (undo-tree-id204 . 1) (undo-tree-id205 . 1) (undo-tree-id206 . 1) (undo-tree-id207 . 1) (undo-tree-id208 . 1) (undo-tree-id209 . 1) (undo-tree-id210 . 1) (undo-tree-id211 . 1) (undo-tree-id212 . 1) (undo-tree-id213 . 1) (undo-tree-id214 . 1) (undo-tree-id215 . 1) (undo-tree-id216 . 1) (undo-tree-id217 . 1) (undo-tree-id218 . 1) (undo-tree-id219 . 1) (undo-tree-id220 . 1) (undo-tree-id221 . 1) (undo-tree-id222 . 1) (undo-tree-id223 . 1) (undo-tree-id224 . 1) (undo-tree-id225 . 1) (undo-tree-id226 . 1) (undo-tree-id227 . 1) (undo-tree-id228 . 1) (undo-tree-id229 . 1) (undo-tree-id230 . 1) (undo-tree-id231 . 1) (undo-tree-id232 . 1) (undo-tree-id233 . 1) (undo-tree-id234 . 1) (undo-tree-id235 . 1) (undo-tree-id236 . 1) (undo-tree-id237 . 1) (undo-tree-id238 . 1) (undo-tree-id239 . 1) (undo-tree-id240 . 1) (undo-tree-id241 . 1) (undo-tree-id242 . 1) (undo-tree-id243 . 1) (undo-tree-id244 . 1) (undo-tree-id245 . 1) (undo-tree-id246 . 1) (undo-tree-id247 . 1) (undo-tree-id248 . 1) (undo-tree-id249 . 1) (undo-tree-id250 . 1) (undo-tree-id251 . 1) (undo-tree-id252 . 1) (undo-tree-id253 . 1) (undo-tree-id254 . 1) (undo-tree-id255 . 1) (undo-tree-id256 . 1) (undo-tree-id257 . 1) (undo-tree-id258 . 1) (undo-tree-id259 . 1) (undo-tree-id260 . 1) (undo-tree-id261 . 1) (undo-tree-id262 . 1) (undo-tree-id263 . 1) (undo-tree-id264 . 1) (undo-tree-id265 . 1) (undo-tree-id266 . 1) (undo-tree-id267 . 1) (undo-tree-id268 . 1) (undo-tree-id269 . 1) (undo-tree-id270 . 1) (undo-tree-id271 . 1) (undo-tree-id272 . 1) (undo-tree-id273 . 1) (undo-tree-id274 . 1) (undo-tree-id275 . 1) (undo-tree-id276 . 1) (undo-tree-id277 . 1) (undo-tree-id278 . 1) (undo-tree-id279 . 1) (undo-tree-id280 . 1) (undo-tree-id281 . 1) (undo-tree-id282 . 1) (undo-tree-id283 . -19) (undo-tree-id284 . -19) (undo-tree-id285 . -19) (undo-tree-id286 . -19) (undo-tree-id287 . -19) (undo-tree-id288 . -20) (undo-tree-id289 . 1) (undo-tree-id290 . 3) (undo-tree-id291 . 1) (undo-tree-id292 . 1) (undo-tree-id293 . 2) (undo-tree-id294 . 2) (undo-tree-id295 . -19) (undo-tree-id296 . -20) (undo-tree-id297 . 3) (undo-tree-id298 . -20) (undo-tree-id299 . 2) (undo-tree-id300 . -21) (undo-tree-id301 . 3) (undo-tree-id302 . -20) (undo-tree-id303 . 2) (undo-tree-id304 . -21) (undo-tree-id305 . -4) (undo-tree-id306 . -15) 9226) ((9206 . 9228) (t 23221 10909 254042 378000)) (23221 10909 226369 710000) 0 nil]) ((#(")" 0 1 (fontified nil face #3=(rainbow-delimiters-depth-1-face))) . 9227) (undo-tree-id307 . -1) (undo-tree-id308 . 1) (9226 . 9227) (9225 . 9227) (#("(" 0 1 (fontified nil)) . -9225) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (9225 . 9226) (9222 . 9225)) ((#("use" 0 3 (fontified nil)) . 9222) (undo-tree-id311 . -3) (undo-tree-id312 . -3) (undo-tree-id313 . -3) (undo-tree-id314 . -3) (undo-tree-id315 . -3) (undo-tree-id316 . -3) (undo-tree-id317 . -3) (undo-tree-id318 . -3) (undo-tree-id319 . -3) (undo-tree-id320 . -3) (undo-tree-id321 . -3) (undo-tree-id322 . -3) (undo-tree-id323 . -3) (undo-tree-id324 . -3) (undo-tree-id325 . -3) (undo-tree-id326 . -3) (undo-tree-id327 . -3) (#("(" 0 1 (fontified nil)) . 9225) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . 1) (undo-tree-id331 . 1) (undo-tree-id332 . -1) (9225 . 9226) (#("()" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face)) 1 2 (fontified nil face #3#)) . 9225) (undo-tree-id333 . -1) (undo-tree-id334 . 1) (undo-tree-id335 . 2) (undo-tree-id336 . 1) (undo-tree-id337 . 1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . 1) (undo-tree-id341 . -1) (undo-tree-id342 . 2) (undo-tree-id343 . -1) (undo-tree-id344 . 1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -2) (#(")" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face))) . 9226) (undo-tree-id348 . 1) (undo-tree-id349 . 1) (undo-tree-id350 . 1) (undo-tree-id351 . 1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (9227 . 9228)) (23221 11371 637297 42000) 0 nil]) ((9210 . 9222) (9205 . 9210) 9205) ((#("
    " 0 1 (fontified t) 1 5 (fontified nil)) . 9205) (undo-tree-id354 . -5) (undo-tree-id355 . -5) (undo-tree-id356 . -5) (undo-tree-id357 . -5) (undo-tree-id358 . -5) (undo-tree-id359 . -5) (undo-tree-id360 . -5) (undo-tree-id361 . -5) (undo-tree-id362 . -1) (undo-tree-id363 . 5) (undo-tree-id364 . -1) (undo-tree-id365 . 5) (undo-tree-id366 . 5) (undo-tree-id367 . 5) (undo-tree-id368 . 5) (undo-tree-id369 . 5) (undo-tree-id370 . 5) (undo-tree-id371 . 5) (undo-tree-id372 . 5) (undo-tree-id373 . 5) (undo-tree-id374 . 5) (undo-tree-id375 . 5) (undo-tree-id376 . 5) (undo-tree-id377 . 5) (undo-tree-id378 . -5) (undo-tree-id379 . -1) (undo-tree-id380 . -5) (undo-tree-id381 . -5) (undo-tree-id382 . -5) (undo-tree-id383 . -5) (undo-tree-id384 . -5) (undo-tree-id385 . -5) (undo-tree-id386 . -1) (undo-tree-id387 . -5) (#("lightShader." 0 12 (fontified t)) . 9210) (undo-tree-id388 . -12) (undo-tree-id389 . -12) (undo-tree-id390 . -12) (undo-tree-id391 . -12) (undo-tree-id392 . -12) (undo-tree-id393 . -12) (undo-tree-id394 . -12) (undo-tree-id395 . -12) (undo-tree-id396 . -11) (undo-tree-id397 . -11) (undo-tree-id398 . -12) (undo-tree-id399 . -12) (undo-tree-id400 . -12) (undo-tree-id401 . -12) (undo-tree-id402 . -12) (undo-tree-id403 . 1)) (23221 11371 806770 917000) 0 nil] [nil nil ((9218 . 9220) (#("    " 0 4 (fontified t)) . -9206) (undo-tree-id141 . -4) (undo-tree-id142 . -4) (undo-tree-id143 . -4) (undo-tree-id144 . -4) 9222 (9216 . 9222) (#("h" 0 1 (fontified t)) . -9216) (undo-tree-id145 . -1) 9217 (9210 . 9217) (9205 . 9210) 9205) ((#("
    " 0 1 (fontified t) 1 5 (fontified nil)) . 9205) (undo-tree-id146 . -1) (undo-tree-id147 . -5) (undo-tree-id148 . -5) (undo-tree-id149 . -5) (undo-tree-id150 . -5) (undo-tree-id151 . -1) (undo-tree-id152 . -5) (undo-tree-id153 . -1) (undo-tree-id154 . -5) (undo-tree-id155 . -1) (undo-tree-id156 . -5) (undo-tree-id157 . -1) (undo-tree-id158 . -5) (undo-tree-id159 . -1) (undo-tree-id160 . -5) (undo-tree-id161 . -1) (undo-tree-id162 . -5) (undo-tree-id163 . -5) (undo-tree-id164 . -5) (#("lightSh" 0 6 (fontified nil) 6 7 (fontified nil)) . 9210) (undo-tree-id165 . -6) (undo-tree-id166 . -6) (undo-tree-id167 . -6) (undo-tree-id168 . -7) (undo-tree-id169 . -6) (undo-tree-id170 . -6) (undo-tree-id171 . -6) (undo-tree-id172 . -6) (undo-tree-id173 . -6) (undo-tree-id174 . -6) (undo-tree-id175 . -7) (9216 . 9217) (#("hader." 0 6 (fontified nil)) . 9216) (undo-tree-id176 . -6) (undo-tree-id177 . -6) (undo-tree-id178 . -6) (undo-tree-id179 . -6) (undo-tree-id180 . -5) (undo-tree-id181 . -5) (undo-tree-id182 . -5) (undo-tree-id183 . -5) (undo-tree-id184 . -5) (9206 . 9210) (#(">>" 0 2 (fontified t)) . 9218) (undo-tree-id185 . -1) (undo-tree-id186 . 2) (undo-tree-id187 . 1) (undo-tree-id188 . 1) (undo-tree-id189 . 1)) (23221 10882 116818 136000) 0 nil] [nil ([nil nil ((9129 . 9135) (9122 . 9129) 9078) ((#("
      " 0 1 (fontified t) 1 7 (fontified nil)) . 9122) (#("untoeh" 0 6 (fontified t)) . 9129) (undo-tree-id135 . 3) (undo-tree-id136 . 2) (undo-tree-id137 . 2) (undo-tree-id138 . 1) (undo-tree-id139 . 1) (undo-tree-id140 . 1)) (23221 10651 341706 218000) 0 nil]) ((#("
" 0 1 (fontified t)) . 9330) (undo-tree-id117 . -1) (undo-tree-id118 . 1) (undo-tree-id119 . 1) (undo-tree-id120 . 1) (undo-tree-id121 . 1) (undo-tree-id122 . 1) (undo-tree-id123 . 1) (undo-tree-id124 . 1) (undo-tree-id125 . 1) (undo-tree-id126 . 1)) ((9330 . 9331)) (23221 10651 341893 799000) 0 nil]) ((#(";" 0 1 (fontified t)) . -9329) (undo-tree-id127 . -1) (undo-tree-id129 . 1) (undo-tree-id131 . 1) (undo-tree-id133 . 1) 9330) ((9329 . 9330)) (23221 11371 933124 349000) 0 nil]) ((9329 . 9330)) ((#(";" 0 1 (fontified t)) . 9329) (undo-tree-id404 . -1) (undo-tree-id405 . 1)) (23221 11372 85382 630000) 0 nil]) ((#("    " 0 4 (fontified t)) . -9330) (undo-tree-id134 . -4) 9334 (9329 . 9334) (t 23221 10631 387176 126000) 9282) ((#("
    " 0 1 (fontified t) 1 5 (fontified nil)) . 9329) (undo-tree-id406 . -1) (undo-tree-id407 . 5) (undo-tree-id408 . 5) (undo-tree-id409 . -1) (undo-tree-id410 . -5) (9330 . 9334)) (23221 11372 240932 797000) 0 nil]) ((#("    lampPost
" 0 12 (fontified t) 12 13 (fontified t)) . 9205) (undo-tree-id89 . -13) (undo-tree-id90 . 1) (undo-tree-id92 . 1) (undo-tree-id94 . 1) (undo-tree-id96 . 1) (undo-tree-id98 . 1) (undo-tree-id100 . 1) (undo-tree-id102 . 1) (undo-tree-id104 . 1) (undo-tree-id106 . 1) (undo-tree-id108 . 1) (undo-tree-id110 . 2) (undo-tree-id112 . 2) (undo-tree-id114 . -4) (undo-tree-id116 . 13)) ((9205 . 9218)) (23221 11372 380613 149000) 0 nil] [nil nil ((#("
" 0 1 (fontified t)) . 9218) (undo-tree-id85 . -1) (undo-tree-id86 . 1) (undo-tree-id87 . 1) (undo-tree-id88 . 1)) ((9218 . 9219)) (23221 10629 503707 294000) 0 nil]) ((9213 . 9217) (9209 . 9213) (9204 . 9209) (t 23221 10616 505466 168000) 9173) ((#("
    " 0 1 (fontified t) 1 5 (fontified nil)) . 9204) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . 4) (#("lamp" 0 4 (fontified nil)) . 9209) (#("Post" 0 4 (fontified t)) . 9213)) (23221 11372 880231 452000) 0 nil]) ((#("    glClearNamedBufferData()
" 0 4 (fontified t) 4 26 (fontified t) 26 27 (fontified t face (rainbow-delimiters-depth-1-face)) 27 28 (fontified t face (rainbow-delimiters-depth-1-face)) 28 29 (fontified t)) . 9205) (undo-tree-id0 . -29) (undo-tree-id1 . -23) (undo-tree-id2 . 2) (undo-tree-id4 . 1) (undo-tree-id6 . 1) (undo-tree-id8 . 1) (undo-tree-id10 . 1) (undo-tree-id12 . 1) (undo-tree-id14 . 1) (undo-tree-id16 . 1) (undo-tree-id18 . 25) (undo-tree-id20 . -27) (undo-tree-id22 . -27) (undo-tree-id24 . -27) (undo-tree-id26 . -27) (undo-tree-id28 . -27) (undo-tree-id30 . -27) (undo-tree-id32 . -26) (undo-tree-id34 . -27) (undo-tree-id36 . 3) (undo-tree-id38 . 3) (undo-tree-id40 . 4) (undo-tree-id42 . 5) (undo-tree-id44 . 6) (undo-tree-id46 . 6) 9228) ((9205 . 9234)) (23221 11372 910130 780000) 0 nil]) ((9209 . 9233) (#("glcbd" 0 5 (fontified t)) . -9209) (undo-tree-id47 . -5) (undo-tree-id49 . -1) (undo-tree-id51 . 1) 9214 (9211 . 9214) (#("C" 0 1 (fontified t)) . -9211) (undo-tree-id53 . -1) (#("l" 0 1 (fontified nil)) . -9212) (undo-tree-id54 . -1) (#("C" 0 1 (fontified t)) . -9213) (undo-tree-id55 . -1) 9214 (9213 . 9214) (#("r" 0 1 (fontified t)) . -9213) (undo-tree-id56 . -1) 9214 (9209 . 9214) (9204 . 9209) 9173) ((#("
    " 0 1 (fontified t) 1 5 (fontified nil)) . 9204) (undo-tree-id438 . 5) (undo-tree-id439 . -5) (undo-tree-id440 . -1) (undo-tree-id441 . 5) (undo-tree-id442 . 5) (undo-tree-id443 . -5) (undo-tree-id444 . -5) (undo-tree-id445 . -5) (undo-tree-id446 . -5) (undo-tree-id447 . -5) (undo-tree-id448 . -5) (undo-tree-id449 . -5) (undo-tree-id450 . -5) (undo-tree-id451 . -5) (undo-tree-id452 . -5) (#("glClr" 0 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil)) . 9209) (undo-tree-id453 . -5) (undo-tree-id454 . -2) (undo-tree-id455 . -2) (undo-tree-id456 . -3) (undo-tree-id457 . -3) (undo-tree-id458 . -4) (undo-tree-id459 . -4) (undo-tree-id460 . -4) (undo-tree-id461 . -4) (undo-tree-id462 . -5) (9213 . 9214) (#("C" 0 1 (fontified nil)) . 9213) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (9211 . 9214) (#("cbd" 0 3 (fontified nil)) . 9211) (undo-tree-id465 . -3) (undo-tree-id466 . -3) (9209 . 9214) (#("glClearNamedBufferData()" 0 22 (fontified t) 22 23 (fontified t face (rainbow-delimiters-depth-1-face)) 23 24 (fontified t face (rainbow-delimiters-depth-1-face))) . 9209) (undo-tree-id467 . -19) (undo-tree-id468 . 5)) (23221 11372 939952 424000) 0 nil]) ((#("    lampPost
" 0 12 (fontified t) 12 13 (fontified t)) . 9205) (undo-tree-id57 . -13) (undo-tree-id58 . -11) (undo-tree-id60 . 1) (undo-tree-id62 . 1) (undo-tree-id64 . 1) (undo-tree-id66 . 1) (undo-tree-id68 . 1) (undo-tree-id70 . 1) (undo-tree-id72 . 1) (undo-tree-id74 . 1) (undo-tree-id76 . 1) (undo-tree-id78 . 1) (undo-tree-id80 . 1) (undo-tree-id82 . 2) (undo-tree-id84 . -12) 9216) ((9205 . 9218)) (23221 11372 971233 25000) 0 nil]) ((9209 . 9217) (9204 . 9209) (t 23220 56268 99154 271000) 9190) ((#("
    " 0 1 (fontified t) 1 5 (fontified nil)) . 9204) (undo-tree-id469 . 5) (undo-tree-id470 . -5) (undo-tree-id471 . -1) (undo-tree-id472 . 5) (undo-tree-id473 . 5) (undo-tree-id474 . 5) (undo-tree-id475 . 5) (undo-tree-id476 . -5) (undo-tree-id477 . -5) (#("lampPost" 0 8 (fontified t)) . 9209) (undo-tree-id478 . -7) (undo-tree-id479 . 1) (undo-tree-id480 . -8)) (23221 11373 898 713000) 0 nil]) nil nil (23221 11373 57979 646000) 0 nil] #4# 26006 159 nil)